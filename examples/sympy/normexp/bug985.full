self.p_c[2] = Integer(1) 
self.p_v[0] = Symbol('a') 
self.p_c[0] = Integer(8) 
self.p_term[1] = self.p_c[2] * self.p_v[0] ** self.p_c[2] 
self.p_c[1] = Integer(6) 
self.p_v[1] = Symbol('l',positive=True) 
self.p_expr[1] = self.p_c[2] 
self.p_expr[2] = simplify(self.p_expr[1]) 
self.p_expr[1] = self.p_expr[2] - self.p_expr[2] 
self.p_expr[3] = Product(self.p_expr[2],(self.p_v[1],self.p_c[2],self.p_c[2])) 
self.p_c[2] = Integer(0) 
self.p_term[2] = self.p_c[2] * self.p_v[0] ** self.p_c[2] 
self.p_v[0] = Symbol('h',positive=True) 
self.p_expr[2] = atan(self.p_expr[2]) 
self.p_expr[0] = self.p_expr[3] + self.p_expr[3] 
self.p_expr[3] = self.p_expr[1] - self.p_expr[0] 
self.p_expr[2] = self.p_expr[3] - self.p_expr[3] 
self.p_c[2] = Integer(9) 
self.p_v[3] = Symbol('k',positive=True) 
self.p_expr[3] = Product(self.p_expr[1],(self.p_v[3],self.p_c[1],self.p_c[0])) 
self.p_expr[0] = Sum(self.p_expr[3],(self.p_v[1],self.p_c[0],self.p_c[0])) 
self.p_expr[1] = Product(self.p_expr[3],(self.p_v[0],self.p_c[0],self.p_c[0])) 
self.p_expr[3] = Product(self.p_expr[3],(self.p_v[1],self.p_c[1],self.p_c[0])) 
self.p_expr[3] = self.p_expr[3] % self.p_expr[0] 
