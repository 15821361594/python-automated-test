self.p_c[2] = Integer(4) 
self.p_v[1] = Symbol('a') 
self.p_expr[1] = I 
self.p_expr[3] = logcombine(self.p_expr[1]) 
self.p_c[3] = Integer(4) 
self.p_expr[0] = self.p_expr[1] / self.p_expr[1] 
self.p_expr[2] = self.p_expr[1] * self.p_expr[1] 
self.p_expr[1] = self.p_expr[1].subs(self.p_expr[3],self.p_expr[1]) 
self.p_expr[1] = atan(self.p_expr[1]) 
self.p_expr[1] = powsimp(self.p_expr[0]) 
self.p_expr[3] = Sum(self.p_expr[2],(self.p_v[1],self.p_c[2],self.p_c[2])) 
self.p_term[3] = self.p_c[2] * self.p_v[1] ** self.p_c[2] 
self.p_expr[2] = self.p_expr[2].subs(self.p_expr[1],self.p_expr[3]) 
self.p_expr[2] = self.p_expr[3].subs(self.p_expr[3],self.p_expr[1]) 
self.p_expr[0] = Product(self.p_expr[3],(self.p_v[1],self.p_c[3],self.p_c[3])) 
self.p_expr[1] = expand_power_exp(self.p_expr[1]) 
self.p_expr[1] = apart(self.p_expr[1]) 
self.p_expr[3] = self.p_expr[0] / self.p_expr[2] 
self.p_expr[1] = self.p_expr[1] % self.p_expr[0] 
