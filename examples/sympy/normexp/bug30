self.p_expr[1] = E 
self.p_expr[0] = asin(self.p_expr[1]) 
self.p_expr[3] = expand_func(self.p_expr[0]) 
self.p_expr[0] = self.p_expr[1].subs(self.p_expr[1],self.p_expr[3]) 
self.p_expr[3] = self.p_expr[3] * self.p_expr[3] 
self.p_expr[2] = tan(self.p_expr[3]) 
self.p_expr[1] = factorial(self.p_expr[1]) 
self.p_v[3] = Symbol('h',positive=True) 
self.p_expr[1] = self.p_expr[0].subs(self.p_expr[1],self.p_expr[1]) 
self.p_expr[0] = self.p_expr[2] % self.p_expr[2] 
self.p_expr[3] = E 
self.p_expr[2] = self.p_expr[1] ** self.p_expr[0] 
self.p_expr[0] = expand_func(self.p_expr[3]) 
self.p_c[2] = Integer(7) 
self.p_expr[1] = tan(self.p_expr[3]) 
self.p_expr[3] = self.p_expr[3] + self.p_expr[3] 
self.p_v[1] = Symbol('e',positive=True) 
self.p_expr[3] = self.p_expr[3] ** self.p_expr[1] 
self.p_expr[1] = Sum(self.p_expr[0],(self.p_v[1],self.p_c[2],self.p_c[2])) 
self.p_expr[3] = self.p_expr[0].subs(self.p_expr[3],self.p_expr[3]) 
self.p_expr[3] = self.p_expr[3] ** self.p_expr[3] 
self.p_expr[3] = self.p_expr[0].subs(self.p_expr[0],self.p_expr[0]) 
self.p_expr[0] = factor(self.p_expr[2]) 
self.p_expr[2] = factor(self.p_expr[3]) 
self.p_expr[3] = self.p_expr[3].subs(self.p_expr[2],self.p_expr[0]) 
self.p_expr[3] = self.p_expr[2] + self.p_expr[3] 
self.p_expr[3] = self.p_expr[3] * self.p_expr[3] 
self.p_expr[0] = Sum(self.p_expr[2],(self.p_v[1],self.p_c[2],self.p_c[2])) 
self.p_expr[3] = self.p_expr[1] * self.p_expr[2] 
self.p_expr[1] = combsimp(self.p_expr[1]) 
self.p_expr[2] = self.p_expr[3] ** self.p_expr[0] 
self.p_v[0] = Symbol('f',positive=True) 
self.p_expr[1] = self.p_expr[2] - self.p_expr[0] 
self.p_term[0] = self.p_c[2] * self.p_v[1] ** self.p_c[2] 
self.p_expr[3] = self.p_expr[1] * self.p_expr[3] 
self.p_expr[0] = collect(self.p_expr[1],self.p_expr[2]) 
self.p_expr[3] = cancel(self.p_expr[2]) 
self.p_expr[1] = self.p_expr[0] % self.p_expr[2] 
