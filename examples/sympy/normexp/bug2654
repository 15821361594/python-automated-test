self.p_v[1] = Symbol('g',positive=True) 
self.p_c[1] = Integer(2) 
self.p_expr[0] = pi 
self.p_expr[1] = sqrt(self.p_expr[0]) 
self.p_expr[0] = sqrt(self.p_expr[1]) 
self.p_expr[2] = asin(self.p_expr[1]) 
self.p_expr[3] = self.p_expr[0] ** self.p_expr[0] 
self.p_expr[1] = self.p_expr[3].subs(self.p_expr[2],self.p_expr[0]) 
self.p_expr[0] = powsimp(self.p_expr[0]) 
self.p_expr[0] = self.p_expr[2].subs(self.p_expr[2],self.p_expr[1]) 
self.p_expr[1] = self.p_expr[2].subs(self.p_expr[1],self.p_expr[3]) 
self.p_expr[2] = factorial(self.p_expr[0]) 
self.p_expr[3] = self.p_expr[2].subs(self.p_expr[1],self.p_expr[0]) 
self.p_expr[1] = self.p_expr[3].subs(self.p_expr[0],self.p_expr[0]) 
self.p_expr[0] = apart(self.p_expr[2]) 
self.p_expr[3] = self.p_expr[0] * self.p_expr[3] 
self.p_expr[3] = powsimp(self.p_expr[0]) 
self.p_expr[2] = self.p_expr[3].subs(self.p_expr[2],self.p_expr[3]) 
self.p_expr[2] = self.p_expr[1] + self.p_expr[0] 
self.p_expr[1] = self.p_expr[0] % self.p_expr[0] 
self.p_expr[3] = self.p_expr[2].subs(self.p_expr[3],self.p_expr[3]) 
self.p_expr[3] = self.p_expr[1] * self.p_expr[3] 
self.p_expr[3] = apart(self.p_expr[3]) 
self.p_c[0] = Integer(1) 
self.p_expr[2] = self.p_expr[0].subs(self.p_expr[1],self.p_expr[2]) 
self.p_expr[3] = factorial(self.p_expr[1]) 
self.p_expr[0] = self.p_expr[0] % self.p_expr[1] 
self.p_expr[0] = self.p_expr[3] - self.p_expr[1] 
self.p_expr[2] = self.p_expr[1] % self.p_expr[0] 
self.p_expr[0] = self.p_expr[1] ** self.p_expr[3] 
self.p_expr[3] = Product(self.p_expr[0],(self.p_v[1],self.p_c[0],self.p_c[1])) 
self.p_expr[0] = self.p_expr[2] + self.p_expr[2] 
self.p_expr[2] = self.p_expr[3] + self.p_expr[0] 
self.p_expr[1] = self.p_expr[1] % self.p_expr[3] 
self.p_expr[3] = Rational(self.p_c[1],self.p_c[0]) 
self.p_expr[1] = Sum(self.p_expr[3],(self.p_v[1],self.p_c[1],self.p_c[0])) 
self.p_c[1] = Integer(6) 
self.p_expr[3] = combsimp(self.p_expr[0]) 
self.p_expr[0] = combsimp(self.p_expr[1]) 
self.p_expr[1] = self.p_expr[2] - self.p_expr[0] 
self.p_expr[2] = self.p_expr[1] % self.p_expr[0] 
