self.p_v[1] = Symbol('d') 
self.p_v[0] = Symbol('c') 
self.p_v[2] = Symbol('z') 
self.p_c[0] = Integer(5) 
self.p_c[2] = Integer(1) 
self.p_expr[1] = Rational(self.p_c[0],self.p_c[0]) 
self.p_expr[2] = acos(self.p_expr[1]) 
self.p_expr[3] = cos(self.p_expr[2]) 
self.p_expr[1] = self.p_expr[3] / self.p_expr[1] 
self.p_expr[0] = self.p_expr[3] + self.p_expr[2] 
self.p_expr[1] = factorial(self.p_expr[2]) 
self.p_expr[3] = self.p_expr[0] % self.p_expr[1] 
self.p_expr[1] = Product(self.p_expr[1],(self.p_v[1],self.p_c[0],self.p_c[0])) 
self.p_expr[0] = Sum(self.p_expr[2],(self.p_v[0],self.p_c[2],self.p_c[2])) 
self.p_expr[2] = Product(self.p_expr[1],(self.p_v[0],self.p_c[2],self.p_c[0])) 
self.p_expr[1] = self.p_expr[2] % self.p_expr[0] 
