self.p_v[1] = Symbol('d') 
self.p_c[0] = Integer(10) 
self.p_expr[0] = pi 
self.p_v[2] = Symbol('d') 
self.p_expr[1] = Sum(self.p_expr[0],(self.p_v[1],self.p_c[0],self.p_c[0])) 
self.p_expr[2] = self.p_expr[0] * self.p_expr[1] 
self.p_expr[1] = self.p_expr[0] - self.p_expr[1] 
self.p_expr[0] = cos(self.p_expr[2]) 
self.p_expr[3] = expand(self.p_expr[1],force=True) 
self.p_expr[1] = self.p_expr[2] / self.p_expr[0] 
self.p_expr[2] = expand_trig(self.p_expr[1]) 
self.p_c[0] = Integer(8) 
self.p_expr[0] = self.p_expr[0] - self.p_expr[0] 
self.p_expr[1] = apart(self.p_expr[2]) 
self.p_expr[0] = self.p_expr[0] / self.p_expr[2] 
self.p_expr[2] = self.p_expr[3].subs(self.p_expr[2],self.p_expr[1]) 
self.p_expr[3] = self.p_expr[1] * self.p_expr[0] 
self.p_term[1] = self.p_c[0] * self.p_v[1] ** self.p_c[0] 
self.p_expr[2] = asin(self.p_expr[1]) 
self.p_expr[1] = self.p_expr[1].doit() 
self.p_v[1] = Symbol('h',positive=True) 
self.p_expr[0] = apart(self.p_expr[1]) 
