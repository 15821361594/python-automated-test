self.p_v[1] = Symbol('d') 
self.p_v[2] = Symbol('x') 
self.p_c[1] = Integer(3) 
self.p_v[3] = Symbol('e',positive=True) 
self.p_c[3] = Integer(8) 
self.p_term[0] = self.p_c[3] * self.p_v[3] ** self.p_c[3] 
self.p_term[2] = self.p_c[3] * self.p_v[1] ** self.p_c[3] 
self.p_term[3] = self.p_c[1] * self.p_v[3] ** self.p_c[1] 
self.p_expr[1] = I 
self.p_v[3] = Symbol('i',positive=True) 
self.p_expr[2] = expand(self.p_expr[1],force=True) 
self.p_expr[0] = Product(self.p_expr[2],(self.p_v[2],self.p_c[1],self.p_c[1])) 
self.p_expr[3] = Product(self.p_expr[1],(self.p_v[3],self.p_c[1],self.p_c[1])) 
self.p_poly[1] = self.p_term[0] + self.p_term[2] 
self.p_expr[2] = collect(self.p_expr[2],self.p_expr[2]) 
self.p_poly[0] = self.p_term[0] 
self.p_expr[1] = self.p_poly[0] 
self.p_expr[2] = self.p_expr[3] % self.p_expr[1] 
