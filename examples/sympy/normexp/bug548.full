self.p_v[0] = Symbol('g',positive=True) 
self.p_c[3] = Integer(2) 
self.p_v[2] = Symbol('f',positive=True) 
self.p_c[2] = Integer(6) 
self.p_term[3] = self.p_c[2] * self.p_v[2] ** self.p_c[2] 
self.p_expr[2] = Rational(self.p_c[2],self.p_c[3]) 
self.p_c[0] = Integer(4) 
self.p_expr[1] = cancel(self.p_expr[2]) 
self.p_expr[2] = sin(self.p_expr[2]) 
self.p_v[2] = Symbol('g',positive=True) 
self.p_expr[2] = Sum(self.p_expr[1],(self.p_v[0],self.p_c[2],self.p_c[2])) 
self.p_expr[1] = self.p_expr[1].doit() 
self.p_expr[1] = self.p_expr[1] / self.p_expr[1] 
self.p_v[1] = Symbol('f',positive=True) 
self.p_expr[0] = self.p_expr[2] * self.p_expr[1] 
self.p_term[0] = self.p_c[3] * self.p_v[1] ** self.p_c[0] 
self.p_expr[1] = self.p_expr[2] / self.p_expr[0] 
self.p_expr[2] = Sum(self.p_expr[0],(self.p_v[2],self.p_c[2],self.p_c[3])) 
self.p_expr[3] = Product(self.p_expr[1],(self.p_v[0],self.p_c[0],self.p_c[3])) 
self.p_expr[0] = collect(self.p_expr[0],self.p_expr[2]) 
self.p_expr[0] = self.p_expr[1] % self.p_expr[3] 
