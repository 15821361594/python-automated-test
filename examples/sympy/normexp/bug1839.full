self.p_v[3] = Symbol('d') 
self.p_c[1] = Integer(1) 
self.p_c[3] = Integer(3) 
self.p_v[0] = Symbol('d') 
self.p_term[1] = self.p_c[1] * self.p_v[3] ** self.p_c[3] 
self.p_v[2] = Symbol('h',positive=True) 
self.p_v[1] = Symbol('e',positive=True) 
self.p_c[2] = Integer(7) 
self.p_poly[0] = self.p_term[1] + self.p_term[1] 
self.p_expr[2] = Rational(self.p_c[1],self.p_c[3]) 
self.p_expr[1] = expand_trig(self.p_expr[2]) 
self.p_term[0] = self.p_c[3] * self.p_v[1] ** self.p_c[3] 
self.p_term[3] = self.p_c[3] * self.p_v[1] ** self.p_c[3] 
self.p_expr[2] = Sum(self.p_expr[1],(self.p_v[2],self.p_c[2],self.p_c[3])) 
self.p_expr[3] = expand(self.p_expr[1],force=True) 
self.p_expr[0] = self.p_expr[3] % self.p_expr[2] 
