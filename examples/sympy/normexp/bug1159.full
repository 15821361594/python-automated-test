self.p_expr[3] = pi 
self.p_c[1] = Integer(9) 
self.p_v[1] = Symbol('g',positive=True) 
self.p_expr[2] = self.p_expr[3] + self.p_expr[3] 
self.p_c[3] = Integer(10) 
self.p_expr[3] = self.p_expr[3] ** self.p_expr[3] 
self.p_expr[3] = expand_power_base(self.p_expr[2]) 
self.p_expr[1] = sqrt(self.p_expr[2]) 
self.p_v[3] = Symbol('y') 
self.p_expr[2] = Sum(self.p_expr[2],(self.p_v[3],self.p_c[3],self.p_c[1])) 
self.p_expr[0] = powdenest(self.p_expr[1]) 
self.p_expr[2] = Rational(self.p_c[3],self.p_c[1]) 
self.p_expr[1] = self.p_expr[1].subs(self.p_expr[1],self.p_expr[0]) 
self.p_expr[0] = self.p_expr[0].subs(self.p_expr[0],self.p_expr[3]) 
self.p_expr[0] = self.p_expr[0] % self.p_expr[2] 
self.p_expr[0] = Sum(self.p_expr[1],(self.p_v[3],self.p_c[3],self.p_c[1])) 
self.p_expr[1] = Rational(self.p_c[1],self.p_c[3]) 
self.p_expr[2] = self.p_expr[1] % self.p_expr[0] 
