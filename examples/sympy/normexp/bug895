self.p_c[0] = Integer(5) 
self.p_c[2] = Integer(2) 
self.p_v[2] = Symbol('b') 
self.p_v[3] = Symbol('z') 
self.p_term[0] = self.p_c[2] * self.p_v[2] ** self.p_c[0] 
self.p_v[0] = Symbol('c') 
self.p_expr[2] = self.p_v[3] 
self.p_expr[0] = acos(self.p_expr[2]) 
self.p_expr[3] = Sum(self.p_expr[0],(self.p_v[3],self.p_c[0],self.p_c[0])) 
self.p_expr[0] = Rational(self.p_c[2],self.p_c[2]) 
self.p_expr[2] = self.p_expr[2] + self.p_expr[0] 
self.p_expr[2] = expand_power_exp(self.p_expr[3]) 
self.p_c[2] = Integer(1) 
self.p_expr[3] = self.p_expr[2] + self.p_expr[0] 
self.p_expr[2] = self.p_expr[0] % self.p_expr[2] 
