self.p_c[3] = Integer(5) 
self.p_v[3] = Symbol('d') 
self.p_expr[3] = self.p_v[3] 
self.p_expr[1] = sin(self.p_expr[3]) 
self.p_expr[3] = E 
self.p_expr[2] = trigsimp(self.p_expr[3]) 
self.p_expr[0] = self.p_expr[2] / self.p_expr[2] 
self.p_expr[2] = self.p_expr[3] * self.p_expr[0] 
self.p_expr[0] = cos(self.p_expr[1]) 
self.p_expr[1] = expand(self.p_expr[2]) 
self.p_expr[3] = collect(self.p_expr[2],self.p_expr[0]) 
self.p_expr[2] = self.p_expr[1].subs(self.p_expr[2],self.p_expr[3]) 
self.p_expr[2] = self.p_expr[0] + self.p_expr[2] 
self.p_expr[0] = self.p_expr[3].subs(self.p_expr[3],self.p_expr[1]) 
self.p_expr[3] = self.p_expr[0] / self.p_expr[0] 
self.p_expr[2] = self.p_expr[1] * self.p_expr[3] 
self.p_expr[0] = logcombine(self.p_expr[2]) 
self.p_expr[2] = self.p_expr[1] ** self.p_expr[1] 
self.p_expr[3] = self.p_expr[0] * self.p_expr[1] 
self.p_expr[1] = expand(self.p_expr[2]) 
self.p_expr[0] = self.p_expr[1].subs(self.p_expr[0],self.p_expr[1]) 
