self.p_c[3] = Integer(7) 
self.p_expr[0] = pi 
self.p_v[3] = Symbol('b') 
self.p_expr[3] = E 
self.p_c[2] = Integer(3) 
self.p_expr[2] = Rational(self.p_c[3],self.p_c[3]) 
self.p_expr[1] = sin(self.p_expr[0]) 
self.p_expr[0] = self.p_expr[3] % self.p_expr[0] 
self.p_expr[3] = self.p_expr[3] / self.p_expr[0] 
self.p_expr[3] = Sum(self.p_expr[1],(self.p_v[3],self.p_c[2],self.p_c[3])) 
self.p_expr[1] = self.p_expr[3].subs(self.p_expr[1],self.p_expr[0]) 
self.p_expr[0] = self.p_expr[2].subs(self.p_expr[3],self.p_expr[1]) 
self.p_expr[2] = self.p_expr[2].subs(self.p_expr[0],self.p_expr[3]) 
self.p_expr[1] = acos(self.p_expr[2]) 
self.p_expr[0] = sqrt(self.p_expr[1]) 
self.p_expr[1] = Product(self.p_expr[0],(self.p_v[3],self.p_c[3],self.p_c[3])) 
self.p_expr[3] = self.p_expr[0].subs(self.p_expr[3],self.p_expr[0]) 
self.p_expr[2] = self.p_expr[1] - self.p_expr[3] 
self.p_expr[0] = acos(self.p_expr[3]) 
self.p_expr[3] = self.p_expr[2].subs(self.p_expr[1],self.p_expr[0]) 
self.p_expr[1] = self.p_expr[3] + self.p_expr[3] 
self.p_v[3] = Symbol('z') 
self.p_expr[3] = Sum(self.p_expr[0],(self.p_v[3],self.p_c[2],self.p_c[3])) 
self.p_expr[2] = Product(self.p_expr[0],(self.p_v[3],self.p_c[2],self.p_c[3])) 
self.p_c[1] = Integer(0) 
self.p_expr[0] = trigsimp(self.p_expr[0]) 
self.p_expr[0] = Sum(self.p_expr[3],(self.p_v[3],self.p_c[2],self.p_c[1])) 
self.p_expr[3] = self.p_expr[1] * self.p_expr[2] 
