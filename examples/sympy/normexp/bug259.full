self.p_expr[2] = E 
self.p_expr[1] = self.p_expr[2] ** self.p_expr[2] 
self.p_v[0] = Symbol('h',positive=True) 
self.p_expr[0] = expand_func(self.p_expr[1]) 
self.p_expr[3] = tan(self.p_expr[1]) 
self.p_expr[2] = powsimp(self.p_expr[2]) 
self.p_v[1] = Symbol('b') 
self.p_expr[2] = sin(self.p_expr[2]) 
self.p_expr[2] = pi 
self.p_expr[1] = acos(self.p_expr[2]) 
self.p_expr[2] = collect(self.p_expr[3],self.p_expr[0]) 
self.p_expr[3] = self.p_expr[0] - self.p_expr[1] 
self.p_expr[0] = expand_trig(self.p_expr[3]) 
self.p_expr[1] = expand_power_base(self.p_expr[0]) 
self.p_expr[0] = self.p_expr[3] % self.p_expr[0] 
self.p_expr[0] = self.p_expr[1].subs(self.p_expr[2],self.p_expr[1]) 
self.p_expr[3] = trigsimp(self.p_expr[2]) 
self.p_expr[1] = expand(self.p_expr[2],force=True) 
self.p_expr[2] = self.p_expr[0] % self.p_expr[3] 
