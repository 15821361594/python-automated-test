self.p_v[0] = Symbol('h',positive=True) 
self.p_v[2] = Symbol('b') 
self.p_expr[0] = pi 
self.p_expr[2] = collect(self.p_expr[0],self.p_expr[0]) 
self.p_expr[0] = self.p_expr[2] ** self.p_expr[0] 
self.p_v[3] = Symbol('b') 
self.p_expr[2] = sqrt(self.p_expr[2]) 
self.p_c[1] = Integer(10) 
self.p_expr[1] = sin(self.p_expr[2]) 
self.p_expr[3] = Product(self.p_expr[1],(self.p_v[2],self.p_c[1],self.p_c[1])) 
self.p_expr[0] = expand_power_exp(self.p_expr[0]) 
self.p_expr[1] = self.p_expr[2] + self.p_expr[0] 
self.p_expr[0] = tan(self.p_expr[2]) 
self.p_expr[2] = expand_power_exp(self.p_expr[0]) 
self.p_expr[0] = Product(self.p_expr[0],(self.p_v[0],self.p_c[1],self.p_c[1])) 
self.p_expr[0] = expand(self.p_expr[0],force=True) 
self.p_expr[0] = Product(self.p_expr[2],(self.p_v[0],self.p_c[1],self.p_c[1])) 
self.p_c[3] = Integer(8) 
self.p_expr[2] = self.p_expr[1] % self.p_expr[0] 
