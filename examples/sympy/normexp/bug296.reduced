self.p_c[2] = Integer(7) 
self.p_c[3] = Integer(4) 
self.p_expr[1] = Rational(self.p_c[3],self.p_c[2]) 
self.p_v[0] = Symbol('z') 
self.p_expr[0] = self.p_expr[1] - self.p_expr[1] 
self.p_expr[1] = collect(self.p_expr[0],self.p_expr[0]) 
self.p_v[3] = Symbol('k',positive=True) 
self.p_expr[2] = Product(self.p_expr[1],(self.p_v[0],self.p_c[3],self.p_c[3])) 
self.p_expr[3] = Product(self.p_expr[2],(self.p_v[3],self.p_c[3],self.p_c[3])) 
self.p_expr[0] = self.p_expr[3] + self.p_expr[2] 
self.p_expr[2] = self.p_expr[1] ** self.p_expr[3] 
self.p_expr[1] = self.p_expr[3] / self.p_expr[0] 
self.p_expr[3] = self.p_expr[2] / self.p_expr[0] 
self.p_expr[0] = self.p_expr[2].subs(self.p_expr[2],self.p_expr[1]) 
self.p_expr[1] = self.p_expr[0] ** self.p_expr[3] 
self.p_expr[2] = self.p_expr[1] ** self.p_expr[0] 
