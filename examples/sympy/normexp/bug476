self.p_expr[1] = I 
self.p_expr[0] = cancel(self.p_expr[1]) 
self.p_expr[1] = expand_power_exp(self.p_expr[1]) 
self.p_expr[3] = factor(self.p_expr[1]) 
self.p_expr[1] = sqrt(self.p_expr[1]) 
self.p_expr[1] = expand(self.p_expr[3],force=True) 
self.p_c[1] = Integer(5) 
self.p_expr[3] = self.p_expr[3].subs(self.p_expr[0],self.p_expr[1]) 
self.p_expr[2] = self.p_expr[3].subs(self.p_expr[1],self.p_expr[1]) 
self.p_v[3] = Symbol('e',positive=True) 
self.p_expr[0] = sin(self.p_expr[1]) 
self.p_expr[3] = logcombine(self.p_expr[1]) 
self.p_expr[1] = self.p_expr[1] * self.p_expr[1] 
self.p_expr[1] = self.p_expr[2] * self.p_expr[1] 
self.p_expr[1] = cos(self.p_expr[1]) 
self.p_c[3] = Integer(8) 
self.p_expr[1] = Sum(self.p_expr[1],(self.p_v[3],self.p_c[1],self.p_c[1])) 
self.p_expr[2] = self.p_expr[2].subs(self.p_expr[2],self.p_expr[3]) 
self.p_expr[3] = self.p_c[1] 
self.p_expr[2] = self.p_expr[1] - self.p_expr[3] 
self.p_expr[3] = self.p_expr[3].subs(self.p_expr[3],self.p_expr[2]) 
self.p_expr[3] = self.p_expr[3] % self.p_expr[0] 
