self.p_v[1] = Symbol('a') 
self.p_v[0] = Symbol('j',positive=True) 
self.p_expr[1] = E 
self.p_expr[2] = logcombine(self.p_expr[1]) 
self.p_expr[3] = collect(self.p_expr[2],self.p_expr[2]) 
self.p_expr[0] = factorial(self.p_expr[1]) 
self.p_expr[2] = cos(self.p_expr[1]) 
self.p_expr[1] = self.p_expr[1] / self.p_expr[1] 
self.p_expr[1] = sin(self.p_expr[1]) 
self.p_c[0] = Integer(8) 
self.p_expr[1] = simplify(self.p_expr[1]) 
self.p_expr[1] = Product(self.p_expr[2],(self.p_v[1],self.p_c[0],self.p_c[0])) 
self.p_expr[2] = acos(self.p_expr[0]) 
self.p_expr[0] = Sum(self.p_expr[3],(self.p_v[0],self.p_c[0],self.p_c[0])) 
self.p_expr[3] = self.p_expr[1].subs(self.p_expr[1],self.p_expr[0]) 
self.p_expr[1] = powsimp(self.p_expr[3]) 
self.p_expr[0] = self.p_expr[0].subs(self.p_expr[0],self.p_expr[0]) 
self.p_expr[3] = expand_power_base(self.p_expr[2]) 
self.p_expr[0] = self.p_expr[0] % self.p_expr[2] 
