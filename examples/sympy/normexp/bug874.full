self.p_v[3] = Symbol('i',positive=True) 
self.p_v[2] = Symbol('j',positive=True) 
self.p_v[1] = Symbol('b') 
self.p_c[0] = Integer(10) 
self.p_expr[0] = self.p_c[0] 
self.p_expr[1] = expand_power_exp(self.p_expr[0]) 
self.p_expr[0] = cos(self.p_expr[1]) 
self.p_expr[2] = tan(self.p_expr[1]) 
self.p_v[0] = Symbol('l',positive=True) 
self.p_expr[3] = acos(self.p_expr[1]) 
self.p_expr[1] = atan(self.p_expr[2]) 
self.p_expr[2] = self.p_expr[2].subs(self.p_expr[1],self.p_expr[2]) 
self.p_expr[1] = powsimp(self.p_expr[3]) 
self.p_expr[3] = self.p_expr[2] * self.p_expr[1] 
self.p_expr[1] = self.p_expr[3] % self.p_expr[0] 
