self.p_v[2] = Symbol('d') 
self.p_v[3] = Symbol('j',positive=True) 
self.p_expr[2] = self.p_v[2] 
self.p_expr[1] = expand(self.p_expr[2],force=True) 
self.p_expr[0] = self.p_v[2] 
self.p_expr[2] = self.p_expr[1] / self.p_expr[0] 
self.p_c[2] = Integer(9) 
self.p_expr[3] = Product(self.p_expr[2],(self.p_v[3],self.p_c[2],self.p_c[2])) 
self.p_v[0] = Symbol('i',positive=True) 
self.p_c[3] = Integer(6) 
self.p_c[0] = Integer(1) 
self.p_expr[2] = Sum(self.p_expr[3],(self.p_v[0],self.p_c[0],self.p_c[0])) 
self.p_expr[0] = expand_log(self.p_expr[3]) 
self.p_expr[3] = Product(self.p_expr[2],(self.p_v[0],self.p_c[3],self.p_c[2])) 
self.p_expr[1] = self.p_expr[3] % self.p_expr[0] 
