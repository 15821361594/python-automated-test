self.p_v[1] = Symbol('y') 
self.p_v[2] = Symbol('f',positive=True) 
self.p_v[0] = Symbol('h',positive=True) 
self.p_c[3] = Integer(9) 
self.p_c[0] = Integer(7) 
self.p_v[3] = Symbol('x') 
self.p_c[2] = Integer(7) 
self.p_expr[1] = Rational(self.p_c[0],self.p_c[3]) 
self.p_expr[0] = Sum(self.p_expr[1],(self.p_v[2],self.p_c[3],self.p_c[0])) 
self.p_expr[2] = Product(self.p_expr[0],(self.p_v[0],self.p_c[0],self.p_c[3])) 
self.p_expr[0] = I 
self.p_expr[3] = Rational(self.p_c[2],self.p_c[3]) 
self.p_expr[1] = Sum(self.p_expr[3],(self.p_v[0],self.p_c[3],self.p_c[3])) 
self.p_expr[3] = Sum(self.p_expr[1],(self.p_v[0],self.p_c[3],self.p_c[3])) 
self.p_expr[1] = Sum(self.p_expr[1],(self.p_v[1],self.p_c[2],self.p_c[0])) 
self.p_expr[1] = Sum(self.p_expr[1],(self.p_v[3],self.p_c[0],self.p_c[3])) 
self.p_expr[1] = self.p_expr[0] * self.p_expr[1] 
self.p_expr[1] = Product(self.p_expr[3],(self.p_v[1],self.p_c[2],self.p_c[3])) 
self.p_expr[0] = self.p_expr[2] - self.p_expr[1] 
self.p_c[0] = Integer(10) 
self.p_v[3] = Symbol('b') 
self.p_expr[2] = Product(self.p_expr[0],(self.p_v[2],self.p_c[3],self.p_c[3])) 
self.p_expr[1] = self.p_expr[0] % self.p_expr[1] 
