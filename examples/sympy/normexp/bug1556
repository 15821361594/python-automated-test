self.p_c[2] = Integer(2) 
self.p_v[0] = Symbol('z') 
self.p_c[1] = Integer(2) 
self.p_c[3] = Integer(4) 
self.p_expr[3] = Rational(self.p_c[3],self.p_c[2]) 
self.p_expr[2] = logcombine(self.p_expr[3]) 
self.p_v[2] = Symbol('d') 
self.p_expr[0] = I 
self.p_v[3] = Symbol('h',positive=True) 
self.p_expr[3] = Product(self.p_expr[2],(self.p_v[2],self.p_c[2],self.p_c[1])) 
self.p_expr[2] = self.p_expr[2].subs(self.p_expr[3],self.p_expr[0]) 
self.p_expr[1] = Sum(self.p_expr[2],(self.p_v[0],self.p_c[3],self.p_c[3])) 
self.p_expr[2] = Sum(self.p_expr[1],(self.p_v[0],self.p_c[2],self.p_c[2])) 
self.p_expr[0] = expand(self.p_expr[2]) 
self.p_c[0] = Integer(2) 
self.p_expr[2] = Sum(self.p_expr[1],(self.p_v[3],self.p_c[2],self.p_c[2])) 
self.p_expr[1] = Product(self.p_expr[1],(self.p_v[2],self.p_c[1],self.p_c[2])) 
self.p_expr[3] = self.p_expr[3] % self.p_expr[1] 
