self.p_c[3] = Integer(5) 
self.p_v[3] = Symbol('z') 
self.p_c[0] = Integer(0) 
self.p_term[2] = self.p_c[3] * self.p_v[3] ** self.p_c[0] 
self.p_expr[3] = self.p_c[0] 
self.p_v[3] = Symbol('c') 
self.p_expr[2] = trigsimp(self.p_expr[3]) 
self.p_expr[1] = factorial(self.p_expr[2]) 
self.p_c[1] = Integer(0) 
self.p_expr[2] = Product(self.p_expr[1],(self.p_v[3],self.p_c[1],self.p_c[0])) 
self.p_expr[3] = self.p_expr[3] * self.p_expr[2] 
self.p_expr[3] = Product(self.p_expr[2],(self.p_v[3],self.p_c[1],self.p_c[0])) 
self.p_c[3] = Integer(6) 
self.p_expr[1] = sin(self.p_expr[2]) 
self.p_expr[0] = self.p_expr[2].subs(self.p_expr[2],self.p_expr[1]) 
self.p_expr[1] = self.p_expr[0].subs(self.p_expr[0],self.p_expr[1]) 
self.p_expr[1] = Sum(self.p_expr[3],(self.p_v[3],self.p_c[1],self.p_c[3])) 
self.p_expr[3] = self.p_expr[2] % self.p_expr[3] 
