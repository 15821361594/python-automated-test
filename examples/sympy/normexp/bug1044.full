self.p_v[3] = Symbol('c') 
self.p_c[0] = Integer(0) 
self.p_v[0] = Symbol('h',positive=True) 
self.p_v[1] = Symbol('a') 
self.p_expr[2] = self.p_v[1] 
self.p_expr[0] = self.p_expr[2] * self.p_expr[2] 
self.p_expr[3] = E 
self.p_expr[1] = I 
self.p_expr[2] = self.p_expr[3] / self.p_expr[3] 
self.p_expr[3] = self.p_expr[2] ** self.p_expr[0] 
self.p_expr[0].evalf() 
self.p_expr[2] = self.p_expr[1].subs(self.p_expr[1],self.p_expr[1]) 
self.p_expr[1] = self.p_expr[3] - self.p_expr[1] 
self.p_expr[0] = Product(self.p_expr[0],(self.p_v[3],self.p_c[0],self.p_c[0])) 
self.p_v[2] = Symbol('j',positive=True) 
self.p_expr[1] = self.p_expr[2].subs(self.p_expr[0],self.p_expr[1]) 
self.p_expr[0] = self.p_expr[0] + self.p_expr[0] 
self.p_expr[3] = Product(self.p_expr[1],(self.p_v[3],self.p_c[0],self.p_c[0])) 
self.p_c[0] = Integer(8) 
self.p_expr[1] = self.p_expr[1].doit() 
self.p_expr[0] = self.p_expr[2] % self.p_expr[3] 
