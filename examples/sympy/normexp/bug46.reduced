self.p_v[3] = Symbol('z') 
self.p_c[2] = Integer(7) 
self.p_c[1] = Integer(4) 
self.p_expr[2] = self.p_c[1] 
self.p_expr[0] = sin(self.p_expr[2]) 
self.p_expr[3] = expand(self.p_expr[0]) 
self.p_expr[0] = atan(self.p_expr[2]) 
self.p_expr[1] = self.p_expr[2].subs(self.p_expr[2],self.p_expr[2]) 
self.p_expr[2] = collect(self.p_expr[0],self.p_expr[1]) 
self.p_c[3] = Integer(6) 
self.p_expr[1] = self.p_expr[0] ** self.p_expr[2] 
self.p_expr[0] = Sum(self.p_expr[3],(self.p_v[3],self.p_c[2],self.p_c[3])) 
self.p_expr[3] = asin(self.p_expr[1]) 
self.p_expr[1] = expand_power_exp(self.p_expr[0]) 
self.p_expr[2] = self.p_expr[1] % self.p_expr[2] 
