self.p_v[1] = Symbol('h',positive=True) 
self.p_c[0] = Integer(5) 
self.p_v[0] = Symbol('x') 
self.p_c[3] = Integer(9) 
self.p_v[3] = Symbol('x') 
self.p_expr[2] = I 
self.p_expr[1] = Product(self.p_expr[2],(self.p_v[0],self.p_c[3],self.p_c[0])) 
self.p_expr[2] = tan(self.p_expr[2]) 
self.p_expr[2] = Product(self.p_expr[1],(self.p_v[0],self.p_c[3],self.p_c[3])) 
self.p_expr[1] = self.p_v[0] 
self.p_expr[0] = Product(self.p_expr[2],(self.p_v[1],self.p_c[0],self.p_c[0])) 
self.p_expr[2] = Product(self.p_expr[1],(self.p_v[3],self.p_c[0],self.p_c[3])) 
self.p_expr[3] = powsimp(self.p_expr[2]) 
self.p_expr[1] = factorial(self.p_expr[0]) 
self.p_c[2] = Integer(6) 
self.p_expr[0] = collect(self.p_expr[3],self.p_expr[1]) 
self.p_expr[1] = self.p_expr[0].subs(self.p_expr[1],self.p_expr[3]) 
self.p_expr[1] = Sum(self.p_expr[2],(self.p_v[1],self.p_c[0],self.p_c[2])) 
self.p_expr[2] = sin(self.p_expr[0]) 
self.p_expr[3] = collect(self.p_expr[3],self.p_expr[3]) 
self.p_expr[0] = Sum(self.p_expr[2],(self.p_v[1],self.p_c[2],self.p_c[0])) 
self.p_expr[2] = self.p_expr[2] % self.p_expr[0] 
