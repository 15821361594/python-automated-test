self.p_c[2] = Integer(2) 
self.p_v[1] = Symbol('j',positive=True) 
self.p_c[3] = Integer(1) 
self.p_expr[1] = Rational(self.p_c[3],self.p_c[2]) 
self.p_c[2] = Integer(3) 
self.p_expr[3] = asin(self.p_expr[1]) 
self.p_expr[0] = expand_log(self.p_expr[1]) 
self.p_v[3] = Symbol('f',positive=True) 
self.p_expr[1] = self.p_expr[0] / self.p_expr[0] 
self.p_expr[2] = tan(self.p_expr[0]) 
self.p_expr[0] = collect(self.p_expr[2],self.p_expr[3]) 
self.p_expr[2] = expand_log(self.p_expr[3]) 
self.p_expr[3] = self.p_expr[2] / self.p_expr[3] 
self.p_expr[3] = sqrt(self.p_expr[2]) 
self.p_expr[2] = self.p_expr[2] / self.p_expr[0] 
self.p_expr[2] = apart(self.p_expr[0]) 
self.p_expr[0] = Sum(self.p_expr[0],(self.p_v[3],self.p_c[2],self.p_c[3])) 
self.p_expr[0] = self.p_expr[0] * self.p_expr[1] 
self.p_expr[0] = collect(self.p_expr[0],self.p_expr[1]) 
self.p_expr[0] = self.p_expr[3] % self.p_expr[0] 
