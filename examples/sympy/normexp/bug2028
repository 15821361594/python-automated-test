self.p_c[2] = Integer(5) 
self.p_c[1] = Integer(0) 
self.p_v[3] = Symbol('l',positive=True) 
self.p_v[1] = Symbol('g',positive=True) 
self.p_c[0] = Integer(10) 
self.p_expr[3] = Rational(self.p_c[2],self.p_c[0]) 
self.p_expr[1] = Sum(self.p_expr[3],(self.p_v[3],self.p_c[2],self.p_c[2])) 
self.p_expr[2] = Sum(self.p_expr[3],(self.p_v[3],self.p_c[0],self.p_c[1])) 
self.p_expr[0] = asin(self.p_expr[3]) 
self.p_expr[3] = self.p_expr[2] % self.p_expr[2] 
self.p_c[0] = Integer(6) 
self.p_v[0] = Symbol('b') 
self.p_expr[2] = self.p_expr[1] * self.p_expr[1] 
self.p_expr[1] = self.p_expr[0] + self.p_expr[1] 
self.p_expr[0] = Sum(self.p_expr[0],(self.p_v[0],self.p_c[2],self.p_c[2])) 
self.p_expr[0] = self.p_expr[3] ** self.p_expr[3] 
self.p_v[3] = Symbol('g',positive=True) 
self.p_expr[1] = cancel(self.p_expr[1]) 
self.p_expr[3] = sin(self.p_expr[1]) 
self.p_expr[1] = self.p_expr[3].subs(self.p_expr[2],self.p_expr[0]) 
self.p_expr[0] = self.p_expr[0].subs(self.p_expr[2],self.p_expr[3]) 
self.p_expr[0] = self.p_expr[2] % self.p_expr[0] 
