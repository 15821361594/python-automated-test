self.p_c[3] = Integer(7) 
self.p_v[3] = Symbol('g',positive=True) 
self.p_v[0] = Symbol('l',positive=True) 
self.p_c[1] = Integer(8) 
self.p_term[1] = self.p_c[1] * self.p_v[0] ** self.p_c[3] 
self.p_expr[0] = self.p_c[1] 
self.p_expr[2] = sin(self.p_expr[0]) 
self.p_expr[3] = expand_log(self.p_expr[0]) 
self.p_term[0] = self.p_c[1] * self.p_v[0] ** self.p_c[1] 
self.p_expr[1] = Sum(self.p_expr[3],(self.p_v[3],self.p_c[3],self.p_c[1])) 
self.p_c[1] = Integer(5) 
self.p_expr[0] = self.p_expr[2] - self.p_expr[0] 
self.p_expr[3] = self.p_expr[2] % self.p_expr[0] 
self.p_expr[0] = logcombine(self.p_expr[1]) 
self.p_term[3] = self.p_c[1] * self.p_v[3] ** self.p_c[3] 
self.p_expr[2] = self.p_expr[1] * self.p_expr[3] 
self.p_expr[3] = self.p_expr[3].subs(self.p_expr[1],self.p_expr[2]) 
self.p_expr[2] = sqrt(self.p_expr[0]) 
self.p_expr[0] = sin(self.p_expr[1]) 
self.p_expr[3] = factor(self.p_expr[1]) 
self.p_poly[3] = self.p_term[0] + self.p_term[0] 
self.p_v[0] = Symbol('e',positive=True) 
self.p_v[2] = Symbol('a') 
self.p_expr[1] = self.p_expr[3].subs(self.p_expr[1],self.p_expr[2]) 
self.p_expr[2] = Product(self.p_expr[3],(self.p_v[2],self.p_c[1],self.p_c[3])) 
self.p_c[0] = Integer(4) 
self.p_term[0] = self.p_c[0] * self.p_v[2] ** self.p_c[0] 
self.p_expr[1] = self.p_expr[1] % self.p_expr[0] 
