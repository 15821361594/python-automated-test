self.p_v[3] = Symbol('e',positive=True) 
self.p_c[1] = Integer(4) 
self.p_c[0] = Integer(0) 
self.p_expr[3] = Rational(self.p_c[1],self.p_c[1]) 
self.p_v[1] = Symbol('g',positive=True) 
self.p_expr[1] = expand_func(self.p_expr[3]) 
self.p_c[1] = Integer(7) 
self.p_expr[3] = self.p_expr[3] / self.p_expr[1] 
self.p_expr[1] = tan(self.p_expr[3]) 
self.p_expr[0] = self.p_expr[3].subs(self.p_expr[1],self.p_expr[1]) 
self.p_expr[1] = self.p_expr[0] + self.p_expr[1] 
self.p_expr[0] = Sum(self.p_expr[0],(self.p_v[3],self.p_c[0],self.p_c[1])) 
self.p_expr[1] = self.p_expr[0] / self.p_expr[1] 
self.p_expr[1] = self.p_expr[3].subs(self.p_expr[3],self.p_expr[1]) 
self.p_expr[0] = Product(self.p_expr[0],(self.p_v[1],self.p_c[0],self.p_c[0])) 
self.p_expr[1] = Product(self.p_expr[0],(self.p_v[1],self.p_c[0],self.p_c[0])) 
self.p_expr[3] = self.p_expr[3] - self.p_expr[1] 
self.p_expr[3] = self.p_expr[1].subs(self.p_expr[0],self.p_expr[3]) 
self.p_expr[1] = self.p_expr[1] % self.p_expr[1] 
self.p_v[1] = Symbol('y') 
self.p_expr[1] = Product(self.p_expr[1],(self.p_v[3],self.p_c[0],self.p_c[1])) 
self.p_expr[0] = self.p_expr[1] % self.p_expr[3] 
