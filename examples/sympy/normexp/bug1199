self.p_expr[2] = pi 
self.p_expr[0] = combsimp(self.p_expr[2]) 
self.p_expr[1] = acos(self.p_expr[2]) 
self.p_expr[2] = expand_power_exp(self.p_expr[2]) 
self.p_v[0] = Symbol('y') 
self.p_expr[3] = trigsimp(self.p_expr[0]) 
self.p_expr[0] = self.p_expr[0].subs(self.p_expr[0],self.p_expr[1]) 
self.p_expr[1] = collect(self.p_expr[3],self.p_expr[2]) 
self.p_expr[2] = self.p_expr[0] - self.p_expr[2] 
self.p_expr[0] = self.p_expr[0].subs(self.p_expr[2],self.p_expr[2]) 
self.p_expr[3] = self.p_expr[0].subs(self.p_expr[0],self.p_expr[2]) 
self.p_expr[0] = simplify(self.p_expr[2]) 
self.p_v[1] = Symbol('c') 
self.p_expr[2] = self.p_expr[1].subs(self.p_expr[0],self.p_expr[1]) 
self.p_expr[1] = self.p_expr[2] % self.p_expr[2] 
self.p_expr[0] = powdenest(self.p_expr[3]) 
self.p_expr[2] = collect(self.p_expr[0],self.p_expr[3]) 
self.p_expr[3] = acos(self.p_expr[0]) 
self.p_expr[0] = powdenest(self.p_expr[2]) 
self.p_expr[2] = self.p_expr[3] * self.p_expr[3] 
self.p_c[2] = Integer(4) 
self.p_expr[3] = self.p_expr[2] ** self.p_expr[2] 
self.p_expr[2] = asin(self.p_expr[3]) 
self.p_expr[3].evalf() 
self.p_expr[3] = logcombine(self.p_expr[0]) 
self.p_v[2] = Symbol('x') 
self.p_expr[0] = self.p_expr[0].subs(self.p_expr[1],self.p_expr[1]) 
self.p_expr[0] = self.p_expr[1] ** self.p_expr[2] 
self.p_expr[1] = Product(self.p_expr[3],(self.p_v[2],self.p_c[2],self.p_c[2])) 
self.p_expr[3] = self.p_expr[0].subs(self.p_expr[0],self.p_expr[0]) 
self.p_expr[2] = expand_power_base(self.p_expr[1]) 
self.p_c[2] = Integer(6) 
self.p_term[1] = self.p_c[2] * self.p_v[1] ** self.p_c[2] 
self.p_expr[0] = self.p_expr[0].subs(self.p_expr[3],self.p_expr[0]) 
self.p_expr[0] = trigsimp(self.p_expr[3]) 
self.p_expr[1] = self.p_expr[0] / self.p_expr[0] 
self.p_expr[0] = self.p_expr[0] ** self.p_expr[2] 
self.p_expr[0] = self.p_expr[2].subs(self.p_expr[0],self.p_expr[3]) 
self.p_expr[3] = self.p_expr[0].subs(self.p_expr[3],self.p_expr[2]) 
self.p_expr[0] = Product(self.p_expr[1],(self.p_v[0],self.p_c[2],self.p_c[2])) 
self.p_expr[1] = apart(self.p_expr[1]) 
