self.p_c[3] = Integer(3) 
self.p_c[0] = Integer(2) 
self.p_v[2] = Symbol('i',positive=True) 
self.p_expr[1] = E 
self.p_expr[2] = tan(self.p_expr[1]) 
self.p_term[2] = self.p_c[3] * self.p_v[2] ** self.p_c[3] 
self.p_expr[1] = self.p_expr[1] ** self.p_expr[1] 
self.p_c[1] = Integer(8) 
self.p_expr[1] = expand(self.p_expr[2]) 
self.p_expr[3] = expand_func(self.p_expr[1]) 
self.p_expr[1] = self.p_expr[2].subs(self.p_expr[3],self.p_expr[3]) 
self.p_expr[3] = atan(self.p_expr[3]) 
self.p_expr[0] = self.p_expr[1] - self.p_expr[2] 
self.p_expr[1] = atan(self.p_expr[3]) 
self.p_expr[2] = self.p_expr[2] / self.p_expr[1] 
self.p_expr[1] = self.p_c[0] 
self.p_expr[3] = Sum(self.p_expr[2],(self.p_v[2],self.p_c[3],self.p_c[1])) 
self.p_expr[2] = self.p_expr[1].subs(self.p_expr[1],self.p_expr[0]) 
self.p_expr[1] = trigsimp(self.p_expr[2]) 
self.p_expr[0] = self.p_expr[1].subs(self.p_expr[0],self.p_expr[1]) 
self.p_expr[0] = trigsimp(self.p_expr[0]) 
self.p_expr[2] = self.p_expr[2] * self.p_expr[0] 
self.p_expr[0] = sqrt(self.p_expr[3]) 
self.p_expr[3] = self.p_expr[3] ** self.p_expr[1] 
self.p_expr[2] = powdenest(self.p_expr[1]) 
self.p_expr[1] = Sum(self.p_expr[0],(self.p_v[2],self.p_c[0],self.p_c[0])) 
self.p_expr[3] = Sum(self.p_expr[2],(self.p_v[2],self.p_c[1],self.p_c[3])) 
self.p_expr[2] = expand_log(self.p_expr[3]) 
self.p_expr[3] = Sum(self.p_expr[2],(self.p_v[2],self.p_c[3],self.p_c[0])) 
self.p_expr[0] = self.p_expr[3] - self.p_expr[2] 
self.p_expr[2] = self.p_expr[1].subs(self.p_expr[0],self.p_expr[0]) 
self.p_expr[0] = powsimp(self.p_expr[1]) 
self.p_expr[3] = self.p_expr[2].subs(self.p_expr[3],self.p_expr[2]) 
self.p_expr[3] = self.p_expr[3] - self.p_expr[0] 
self.p_expr[3] = self.p_expr[2] % self.p_expr[1] 
self.p_expr[1] = self.p_expr[1].subs(self.p_expr[3],self.p_expr[1]) 
self.p_expr[0] = expand_trig(self.p_expr[1]) 
self.p_expr[3] = cancel(self.p_expr[2]) 
self.p_expr[2] = self.p_expr[1].doit() 
self.p_expr[1] = Product(self.p_expr[0],(self.p_v[2],self.p_c[1],self.p_c[3])) 
self.p_expr[0] = tan(self.p_expr[0]) 
self.p_expr[0] = Product(self.p_expr[0],(self.p_v[2],self.p_c[1],self.p_c[0])) 
self.p_expr[0] = self.p_expr[1] % self.p_expr[2] 
