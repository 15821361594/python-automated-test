self.p_v[0] = Symbol('z') 
self.p_v[1] = Symbol('z') 
self.p_c[2] = Integer(3) 
self.p_c[3] = Integer(1) 
self.p_expr[3] = self.p_v[1] 
self.p_expr[0] = Product(self.p_expr[3],(self.p_v[1],self.p_c[3],self.p_c[3])) 
self.p_expr[2] = powdenest(self.p_expr[3]) 
self.p_expr[1] = self.p_expr[0] - self.p_expr[2] 
self.p_expr[2] = logcombine(self.p_expr[1]) 
self.p_expr[1] = self.p_expr[1] + self.p_expr[2] 
self.p_expr[2] = self.p_expr[2].subs(self.p_expr[1],self.p_expr[0]) 
self.p_expr[1] = Product(self.p_expr[3],(self.p_v[0],self.p_c[3],self.p_c[3])) 
self.p_expr[3] = self.p_expr[1] ** self.p_expr[3] 
self.p_expr[3] = self.p_expr[2] % self.p_expr[1] 
