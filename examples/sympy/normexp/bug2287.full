self.p_v[2] = Symbol('a') 
self.p_expr[2] = pi 
self.p_v[3] = Symbol('a') 
self.p_v[0] = Symbol('a') 
self.p_c[1] = Integer(7) 
self.p_expr[1] = expand_power_exp(self.p_expr[2]) 
self.p_expr[3] = self.p_expr[1].subs(self.p_expr[2],self.p_expr[2]) 
self.p_expr[2] = self.p_expr[3].subs(self.p_expr[1],self.p_expr[1]) 
self.p_expr[0] = expand_log(self.p_expr[2]) 
self.p_c[2] = Integer(0) 
self.p_expr[3] = Product(self.p_expr[2],(self.p_v[3],self.p_c[2],self.p_c[2])) 
self.p_expr[1] = Sum(self.p_expr[1],(self.p_v[2],self.p_c[2],self.p_c[1])) 
self.p_expr[1] = self.p_expr[0].subs(self.p_expr[0],self.p_expr[3]) 
self.p_expr[0] = Sum(self.p_expr[3],(self.p_v[2],self.p_c[1],self.p_c[1])) 
self.p_expr[3] = self.p_expr[2] ** self.p_expr[3] 
self.p_expr[3] = Product(self.p_expr[3],(self.p_v[0],self.p_c[2],self.p_c[1])) 
self.p_expr[3] = self.p_expr[3] ** self.p_expr[3] 
self.p_expr[3] = self.p_expr[0] % self.p_expr[1] 
