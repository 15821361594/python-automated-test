self.p_v[2] = Symbol('g',positive=True) 
self.p_c[2] = Integer(3) 
self.p_v[1] = Symbol('a') 
self.p_c[3] = Integer(9) 
self.p_term[2] = self.p_c[3] * self.p_v[2] ** self.p_c[2] 
self.p_expr[3] = I 
self.p_expr[1] = expand_power_exp(self.p_expr[3]) 
self.p_expr[3] = expand_func(self.p_expr[1]) 
self.p_expr[0] = self.p_expr[3] + self.p_expr[3] 
self.p_expr[3] = collect(self.p_expr[1],self.p_expr[1]) 
self.p_expr[1] = asin(self.p_expr[1]) 
self.p_expr[1] = self.p_expr[0] * self.p_expr[1] 
self.p_expr[0] = powdenest(self.p_expr[1]) 
self.p_expr[1] = Product(self.p_expr[1],(self.p_v[1],self.p_c[2],self.p_c[2])) 
self.p_expr[2] = sin(self.p_expr[3]) 
self.p_expr[1] = self.p_expr[0] % self.p_expr[1] 
