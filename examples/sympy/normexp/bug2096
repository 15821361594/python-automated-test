self.p_v[1] = Symbol('g',positive=True) 
self.p_c[0] = Integer(0) 
self.p_v[0] = Symbol('e',positive=True) 
self.p_v[2] = Symbol('f',positive=True) 
self.p_c[3] = Integer(9) 
self.p_term[2] = self.p_c[3] * self.p_v[2] ** self.p_c[3] 
self.p_c[3] = Integer(2) 
self.p_v[2] = Symbol('l',positive=True) 
self.p_expr[3] = E 
self.p_expr[1] = cos(self.p_expr[3]) 
self.p_expr[2] = self.p_expr[1] - self.p_expr[1] 
self.p_expr[0] = Product(self.p_expr[3],(self.p_v[1],self.p_c[0],self.p_c[0])) 
self.p_expr[1] = Product(self.p_expr[3],(self.p_v[0],self.p_c[3],self.p_c[0])) 
self.p_expr[3] = self.p_expr[3].subs(self.p_expr[3],self.p_expr[3]) 
self.p_expr[3] = self.p_expr[0].subs(self.p_expr[3],self.p_expr[0]) 
self.p_expr[0] = self.p_expr[1] - self.p_expr[2] 
self.p_expr[1] = Product(self.p_expr[2],(self.p_v[2],self.p_c[0],self.p_c[3])) 
self.p_expr[3] = factorial(self.p_expr[2]) 
self.p_term[1] = self.p_c[3] * self.p_v[1] ** self.p_c[0] 
self.p_v[2] = Symbol('b') 
self.p_v[3] = Symbol('a') 
self.p_expr[2] = self.p_expr[1] % self.p_expr[0] 
