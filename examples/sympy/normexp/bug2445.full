self.p_c[2] = Integer(2) 
self.p_c[0] = Integer(10) 
self.p_v[3] = Symbol('x') 
self.p_term[2] = self.p_c[0] * self.p_v[3] ** self.p_c[0] 
self.p_v[2] = Symbol('d') 
self.p_poly[2] = self.p_term[2] + self.p_term[2] 
self.p_term[0] = self.p_c[2] * self.p_v[2] ** self.p_c[0] 
self.p_term[3] = self.p_c[2] * self.p_v[2] ** self.p_c[0] 
self.p_v[1] = Symbol('y') 
self.p_c[0] = Integer(4) 
self.p_expr[3] = self.p_poly[2] 
self.p_expr[1] = Product(self.p_expr[3],(self.p_v[3],self.p_c[2],self.p_c[0])) 
self.p_expr[2] = powsimp(self.p_expr[1]) 
self.p_expr[3] = Rational(self.p_c[0],self.p_c[0]) 
self.p_expr[0] = Product(self.p_expr[1],(self.p_v[1],self.p_c[0],self.p_c[0])) 
self.p_expr[1] = self.p_expr[1] - self.p_expr[0] 
self.p_poly[0] = self.p_term[3] + self.p_term[0] 
self.p_expr[0] = Sum(self.p_expr[0],(self.p_v[3],self.p_c[0],self.p_c[0])) 
self.p_expr[0] = self.p_expr[3] % self.p_expr[1] 
