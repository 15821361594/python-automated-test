self.p_v[3] = Symbol('g',positive=True) 
self.p_expr[1] = E 
self.p_c[3] = Integer(10) 
self.p_c[0] = Integer(7) 
self.p_expr[3] = cos(self.p_expr[1]) 
self.p_expr[0] = self.p_expr[1] / self.p_expr[3] 
self.p_expr[1] = self.p_expr[0].subs(self.p_expr[3],self.p_expr[1]) 
self.p_expr[2] = Sum(self.p_expr[1],(self.p_v[3],self.p_c[0],self.p_c[0])) 
self.p_expr[3] = expand_func(self.p_expr[1]) 
self.p_expr[0] = self.p_expr[3] - self.p_expr[2] 
self.p_expr[3] = expand(self.p_expr[0]) 
self.p_expr[0] = Product(self.p_expr[3],(self.p_v[3],self.p_c[0],self.p_c[0])) 
self.p_expr[3] = self.p_expr[0] + self.p_expr[0] 
self.p_expr[0] = tan(self.p_expr[3]) 
self.p_expr[2] = self.p_expr[3] * self.p_expr[2] 
self.p_expr[3] = self.p_expr[2] - self.p_expr[0] 
self.p_v[3] = Symbol('c') 
self.p_expr[1] = tan(self.p_expr[0]) 
self.p_expr[2] = cos(self.p_expr[3]) 
self.p_expr[3] = Product(self.p_expr[0],(self.p_v[3],self.p_c[3],self.p_c[0])) 
self.p_v[3] = Symbol('a') 
self.p_c[0] = Integer(4) 
self.p_expr[0] = self.p_expr[0] / self.p_expr[2] 
self.p_expr[0] = self.p_expr[1] % self.p_expr[2] 
