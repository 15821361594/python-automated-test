self.p_v[3] = Symbol('z') 
self.p_v[1] = Symbol('f',positive=True) 
self.p_expr[0] = pi 
self.p_c[3] = Integer(8) 
self.p_c[2] = Integer(0) 
self.p_expr[1] = simplify(self.p_expr[0]) 
self.p_expr[0] = expand_power_base(self.p_expr[1]) 
self.p_expr[1] = Product(self.p_expr[1],(self.p_v[3],self.p_c[2],self.p_c[3])) 
self.p_expr[3] = Sum(self.p_expr[0],(self.p_v[3],self.p_c[2],self.p_c[2])) 
self.p_expr[1] = Sum(self.p_expr[1],(self.p_v[3],self.p_c[3],self.p_c[2])) 
self.p_expr[1] = combsimp(self.p_expr[3]) 
self.p_expr[3] = self.p_expr[3] * self.p_expr[3] 
self.p_expr[2] = self.p_expr[3] - self.p_expr[1] 
self.p_expr[1] = atan(self.p_expr[0]) 
self.p_expr[0] = self.p_expr[1] / self.p_expr[2] 
self.p_expr[1] = self.p_expr[2] % self.p_expr[3] 
