self.p_v[0] = Symbol('x') 
self.p_c[3] = Integer(4) 
self.p_expr[2] = pi 
self.p_expr[0] = E 
self.p_expr[3] = self.p_expr[2] ** self.p_expr[2] 
self.p_expr[1] = self.p_expr[3].subs(self.p_expr[3],self.p_expr[2]) 
self.p_expr[2] = atan(self.p_expr[1]) 
self.p_expr[1] = self.p_expr[0] ** self.p_expr[3] 
self.p_expr[0] = self.p_expr[3] + self.p_expr[3] 
self.p_v[3] = Symbol('e',positive=True) 
self.p_v[1] = Symbol('b') 
self.p_expr[3] = self.p_expr[3] ** self.p_expr[0] 
self.p_expr[3] = factorial(self.p_expr[0]) 
self.p_expr[0] = self.p_expr[2] + self.p_expr[1] 
self.p_expr[1] = self.p_expr[1] / self.p_expr[2] 
self.p_expr[2] = logcombine(self.p_expr[2]) 
self.p_expr[1] = apart(self.p_expr[2]) 
self.p_expr[2] = expand_func(self.p_expr[1]) 
self.p_expr[1] = simplify(self.p_expr[1]) 
self.p_expr[1] = self.p_expr[0] - self.p_expr[1] 
self.p_expr[0] = self.p_expr[3].subs(self.p_expr[1],self.p_expr[2]) 
self.p_expr[1] = Product(self.p_expr[0],(self.p_v[0],self.p_c[3],self.p_c[3])) 
self.p_expr[0] = self.p_expr[1].subs(self.p_expr[2],self.p_expr[2]) 
self.p_expr[2] = expand(self.p_expr[2]) 
self.p_expr[2] = factorial(self.p_expr[2]) 
self.p_expr[3] = self.p_expr[2].subs(self.p_expr[3],self.p_expr[3]) 
self.p_expr[3] = self.p_expr[1] / self.p_expr[3] 
self.p_expr[3] = expand_log(self.p_expr[1]) 
self.p_expr[1] = self.p_expr[1] * self.p_expr[0] 
self.p_expr[1] = self.p_expr[2] % self.p_expr[0] 
