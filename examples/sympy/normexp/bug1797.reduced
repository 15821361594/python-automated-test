self.p_v[2] = Symbol('b') 
self.p_v[3] = Symbol('g',positive=True) 
self.p_c[1] = Integer(8) 
self.p_expr[0] = Rational(self.p_c[1],self.p_c[1]) 
self.p_c[1] = Integer(4) 
self.p_expr[2] = Product(self.p_expr[0],(self.p_v[3],self.p_c[1],self.p_c[1])) 
self.p_c[3] = Integer(7) 
self.p_expr[3] = self.p_expr[2] * self.p_expr[2] 
self.p_expr[1] = Product(self.p_expr[0],(self.p_v[2],self.p_c[1],self.p_c[3])) 
self.p_expr[0] = self.p_expr[3] - self.p_expr[3] 
self.p_expr[3] = self.p_expr[3].subs(self.p_expr[3],self.p_expr[0]) 
self.p_expr[3] = Product(self.p_expr[3],(self.p_v[2],self.p_c[1],self.p_c[3])) 
self.p_expr[3] = self.p_expr[3] * self.p_expr[2] 
self.p_expr[2] = self.p_expr[1] / self.p_expr[3] 
self.p_expr[1] = self.p_expr[3].subs(self.p_expr[3],self.p_expr[0]) 
self.p_expr[0] = self.p_expr[3] ** self.p_expr[2] 
self.p_expr[2] = tan(self.p_expr[1]) 
self.p_expr[3] = self.p_expr[0].subs(self.p_expr[2],self.p_expr[0]) 
self.p_expr[1] = Sum(self.p_expr[2],(self.p_v[2],self.p_c[3],self.p_c[1])) 
self.p_expr[2] = Product(self.p_expr[3],(self.p_v[3],self.p_c[3],self.p_c[3])) 
self.p_expr[3] = self.p_expr[2] % self.p_expr[1] 
