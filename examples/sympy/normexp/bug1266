self.p_v[3] = Symbol('d') 
self.p_expr[2] = pi 
self.p_expr[3] = expand_trig(self.p_expr[2]) 
self.p_expr[0] = cos(self.p_expr[3]) 
self.p_expr[3] = self.p_expr[0] + self.p_expr[2] 
self.p_expr[1] = acos(self.p_expr[0]) 
self.p_expr[2] = self.p_expr[2].subs(self.p_expr[1],self.p_expr[1]) 
self.p_expr[2] = self.p_expr[2] % self.p_expr[1] 
self.p_c[1] = Integer(3) 
self.p_expr[2] = expand_func(self.p_expr[3]) 
self.p_expr[0] = expand(self.p_expr[1],force=True) 
self.p_expr[1] = self.p_expr[0] % self.p_expr[1] 
self.p_c[0] = Integer(9) 
self.p_expr[1] = factorial(self.p_expr[2]) 
self.p_expr[0] = self.p_expr[1].subs(self.p_expr[3],self.p_expr[2]) 
self.p_expr[2] = self.p_expr[3] ** self.p_expr[3] 
self.p_expr[3] = expand_log(self.p_expr[0]) 
self.p_expr[1] = self.p_expr[0] ** self.p_expr[3] 
self.p_expr[3] = Sum(self.p_expr[2],(self.p_v[3],self.p_c[0],self.p_c[1])) 
self.p_expr[0] = trigsimp(self.p_expr[1]) 
self.p_expr[2] = self.p_expr[1] / self.p_expr[1] 
self.p_expr[1] = self.p_expr[1] % self.p_expr[3] 
