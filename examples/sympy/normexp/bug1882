self.p_c[1] = Integer(0) 
self.p_c[2] = Integer(8) 
self.p_v[2] = Symbol('a') 
self.p_expr[1] = self.p_c[2] 
self.p_expr[0] = factorial(self.p_expr[1]) 
self.p_c[3] = Integer(7) 
self.p_expr[1] = self.p_expr[0].subs(self.p_expr[0],self.p_expr[1]) 
self.p_expr[3] = factor(self.p_expr[0]) 
self.p_expr[0] = Product(self.p_expr[3],(self.p_v[2],self.p_c[3],self.p_c[2])) 
self.p_expr[3] = sqrt(self.p_expr[1]) 
self.p_expr[1] = self.p_expr[0] / self.p_expr[0] 
self.p_expr[0] = collect(self.p_expr[0],self.p_expr[0]) 
self.p_expr[2] = expand_trig(self.p_expr[0]) 
self.p_expr[0] = self.p_expr[0].subs(self.p_expr[1],self.p_expr[2]) 
self.p_expr[1] = self.p_expr[0] % self.p_expr[3] 
self.p_c[2] = Integer(9) 
self.p_expr[0] = expand_trig(self.p_expr[3]) 
self.p_expr[3] = self.p_expr[3] / self.p_expr[3] 
self.p_expr[2] = self.p_expr[2] ** self.p_expr[3] 
self.p_expr[3] = expand_func(self.p_expr[2]) 
self.p_expr[2] = self.p_expr[1] % self.p_expr[3] 
