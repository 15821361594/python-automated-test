self.p_expr[2] = E 
self.p_v[3] = Symbol('i',positive=True) 
self.p_v[0] = Symbol('z') 
self.p_expr[0] = trigsimp(self.p_expr[2]) 
self.p_expr[3] = expand(self.p_expr[2]) 
self.p_c[1] = Integer(8) 
self.p_expr[2] = collect(self.p_expr[0],self.p_expr[3]) 
self.p_expr[0] = Product(self.p_expr[2],(self.p_v[3],self.p_c[1],self.p_c[1])) 
self.p_expr[3] = self.p_expr[0] * self.p_expr[2] 
self.p_expr[0] = factor(self.p_expr[0]) 
self.p_term[0] = self.p_c[1] * self.p_v[0] ** self.p_c[1] 
self.p_expr[1] = powsimp(self.p_expr[3]) 
self.p_expr[3] = Sum(self.p_expr[0],(self.p_v[3],self.p_c[1],self.p_c[1])) 
self.p_v[0] = Symbol('b') 
self.p_expr[2] = self.p_expr[2].subs(self.p_expr[0],self.p_expr[0]) 
self.p_c[1] = Integer(9) 
self.p_expr[2] = cos(self.p_expr[1]) 
self.p_expr[0] = self.p_expr[3].subs(self.p_expr[3],self.p_expr[2]) 
self.p_expr[2] = self.p_expr[0] + self.p_expr[2] 
self.p_expr[3] = self.p_expr[0] % self.p_expr[3] 
