self.p_expr[0] = E 
self.p_c[3] = Integer(1) 
self.p_expr[3] = powsimp(self.p_expr[0]) 
self.p_expr[0] = apart(self.p_expr[3]) 
self.p_v[2] = Symbol('i',positive=True) 
self.p_expr[1] = acos(self.p_expr[3]) 
self.p_expr[2] = self.p_expr[0].subs(self.p_expr[1],self.p_expr[3]) 
self.p_expr[1] = simplify(self.p_expr[2]) 
self.p_expr[0] = self.p_expr[1].subs(self.p_expr[0],self.p_expr[2]) 
self.p_expr[3] = self.p_expr[2].subs(self.p_expr[0],self.p_expr[3]) 
self.p_expr[1] = self.p_expr[1] / self.p_expr[1] 
self.p_expr[1] = collect(self.p_expr[3],self.p_expr[1]) 
self.p_expr[0] = trigsimp(self.p_expr[3]) 
self.p_expr[1] = self.p_expr[3] * self.p_expr[1] 
self.p_expr[1].evalf() 
self.p_expr[1] = Product(self.p_expr[2],(self.p_v[2],self.p_c[3],self.p_c[3])) 
self.p_expr[2] = tan(self.p_expr[3]) 
self.p_expr[3] = collect(self.p_expr[1],self.p_expr[3]) 
self.p_v[2] = Symbol('i',positive=True) 
self.p_expr[1] = self.p_expr[3] * self.p_expr[2] 
self.p_expr[3] = self.p_expr[2] % self.p_expr[3] 
