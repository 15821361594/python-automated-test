self.p_c[3] = Integer(8) 
self.p_v[3] = Symbol('z') 
self.p_v[0] = Symbol('y') 
self.p_expr[3] = I 
self.p_expr[1] = self.p_c[3] 
self.p_c[0] = Integer(3) 
self.p_expr[2] = self.p_expr[1].subs(self.p_expr[1],self.p_expr[3]) 
self.p_expr[1] = Product(self.p_expr[2],(self.p_v[0],self.p_c[3],self.p_c[0])) 
self.p_expr[0] = Product(self.p_expr[2],(self.p_v[0],self.p_c[3],self.p_c[0])) 
self.p_expr[2] = self.p_expr[1].subs(self.p_expr[1],self.p_expr[3]) 
self.p_expr[3] = self.p_expr[3].subs(self.p_expr[0],self.p_expr[1]) 
self.p_v[2] = Symbol('j',positive=True) 
self.p_expr[0] = Product(self.p_expr[0],(self.p_v[0],self.p_c[3],self.p_c[3])) 
self.p_expr[3] = cancel(self.p_expr[2]) 
self.p_v[0] = Symbol('j',positive=True) 
self.p_expr[0] = Sum(self.p_expr[3],(self.p_v[2],self.p_c[3],self.p_c[3])) 
self.p_expr[3] = self.p_expr[3] % self.p_expr[1] 
