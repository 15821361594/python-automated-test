self.p_c[1] = Integer(1) 
self.p_c[3] = Integer(3) 
self.p_v[3] = Symbol('z') 
self.p_term[3] = self.p_c[1] * self.p_v[3] ** self.p_c[3] 
self.p_v[1] = Symbol('x') 
self.p_v[0] = Symbol('e',positive=True) 
self.p_term[2] = self.p_c[1] * self.p_v[0] ** self.p_c[1] 
self.p_c[3] = Integer(4) 
self.p_v[2] = Symbol('l',positive=True) 
self.p_v[0] = Symbol('l',positive=True) 
self.p_c[1] = Integer(10) 
self.p_expr[1] = self.p_c[3] 
self.p_poly[2] = self.p_term[3] + self.p_term[3] 
self.p_expr[0] = Product(self.p_expr[1],(self.p_v[2],self.p_c[3],self.p_c[1])) 
self.p_term[1] = self.p_c[1] * self.p_v[2] ** self.p_c[3] 
self.p_expr[2] = self.p_expr[1] % self.p_expr[1] 
self.p_expr[3] = self.p_expr[1].subs(self.p_expr[1],self.p_expr[0]) 
self.p_expr[0] = self.p_expr[1] % self.p_expr[3] 
