self.p_v[1] = Symbol('j',positive=True) 
self.p_v[0] = Symbol('x') 
self.p_v[3] = Symbol('a') 
self.p_c[2] = Integer(3) 
self.p_expr[1] = self.p_c[2] 
self.p_expr[0] = expand_power_exp(self.p_expr[1]) 
self.p_expr[3] = self.p_expr[0] ** self.p_expr[0] 
self.p_expr[2] = expand_trig(self.p_expr[1]) 
self.p_c[0] = Integer(5) 
self.p_expr[1] = Product(self.p_expr[1],(self.p_v[0],self.p_c[2],self.p_c[2])) 
self.p_expr[0] = Product(self.p_expr[0],(self.p_v[0],self.p_c[2],self.p_c[0])) 
self.p_expr[0] = powsimp(self.p_expr[3]) 
self.p_expr[3] = tan(self.p_expr[2]) 
self.p_term[1] = self.p_c[0] * self.p_v[3] ** self.p_c[2] 
self.p_expr[1] = sin(self.p_expr[2]) 
self.p_expr[2] = self.p_expr[3] - self.p_expr[0] 
self.p_expr[0] = Product(self.p_expr[1],(self.p_v[3],self.p_c[0],self.p_c[2])) 
self.p_expr[1] = self.p_expr[1] / self.p_expr[0] 
self.p_expr[3] = self.p_expr[0].doit() 
self.p_expr[0] = self.p_expr[3] % self.p_expr[0] 
