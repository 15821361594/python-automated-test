self.p_expr[3] = E 
self.p_expr[0] = self.p_expr[3] + self.p_expr[3] 
self.p_v[0] = Symbol('g',positive=True) 
self.p_expr[3] = collect(self.p_expr[0],self.p_expr[3]) 
self.p_expr[1] = asin(self.p_expr[3]) 
self.p_expr[2] = expand_trig(self.p_expr[3]) 
self.p_expr[0] = combsimp(self.p_expr[0]) 
self.p_expr[3] = self.p_expr[0] + self.p_expr[2] 
self.p_expr[2] = self.p_expr[3].subs(self.p_expr[3],self.p_expr[3]) 
self.p_expr[0] = expand_trig(self.p_expr[2]) 
self.p_expr[2] = self.p_expr[1] ** self.p_expr[2] 
self.p_expr[1] = self.p_expr[3] + self.p_expr[3] 
self.p_expr[3] = self.p_expr[2] ** self.p_expr[2] 
self.p_expr[2] = tan(self.p_expr[2]) 
self.p_expr[2] = self.p_expr[2] * self.p_expr[1] 
self.p_expr[1] = self.p_expr[2].subs(self.p_expr[1],self.p_expr[3]) 
self.p_expr[3] = atan(self.p_expr[0]) 
self.p_expr[1] = self.p_expr[2] ** self.p_expr[2] 
self.p_expr[0] = expand_trig(self.p_expr[3]) 
self.p_expr[3] = collect(self.p_expr[2],self.p_expr[1]) 
self.p_expr[1] = tan(self.p_expr[3]) 
self.p_expr[3] = self.p_expr[1] % self.p_expr[2] 
