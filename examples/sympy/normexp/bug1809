self.p_v[2] = Symbol('d') 
self.p_c[2] = Integer(2) 
self.p_expr[2] = Rational(self.p_c[2],self.p_c[2]) 
self.p_expr[0] = asin(self.p_expr[2]) 
self.p_c[0] = Integer(4) 
self.p_expr[3] = self.p_expr[2].subs(self.p_expr[0],self.p_expr[2]) 
self.p_expr[2] = self.p_expr[2] ** self.p_expr[0] 
self.p_v[0] = Symbol('f',positive=True) 
self.p_c[1] = Integer(0) 
self.p_expr[0] = expand(self.p_expr[0],force=True) 
self.p_expr[1] = self.p_expr[2] / self.p_expr[2] 
self.p_c[2] = Integer(6) 
self.p_expr[0] = Product(self.p_expr[2],(self.p_v[2],self.p_c[0],self.p_c[0])) 
self.p_expr[2] = expand(self.p_expr[1],force=True) 
self.p_expr[1] = self.p_expr[0].subs(self.p_expr[1],self.p_expr[0]) 
self.p_term[0] = self.p_c[1] * self.p_v[0] ** self.p_c[2] 
self.p_expr[0] = collect(self.p_expr[0],self.p_expr[3]) 
self.p_expr[1] = self.p_expr[3] / self.p_expr[1] 
self.p_expr[3] = self.p_expr[1] % self.p_expr[3] 
