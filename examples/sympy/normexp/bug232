self.p_c[2] = Integer(0) 
self.p_v[2] = Symbol('g',positive=True) 
self.p_v[3] = Symbol('c') 
self.p_c[3] = Integer(4) 
self.p_term[0] = self.p_c[2] * self.p_v[2] ** self.p_c[2] 
self.p_v[1] = Symbol('y') 
self.p_poly[2] = self.p_term[0] + self.p_term[0] 
self.p_v[0] = Symbol('a') 
self.p_expr[0] = self.p_c[2] 
self.p_term[2] = self.p_c[3] * self.p_v[2] ** self.p_c[3] 
self.p_term[3] = self.p_c[2] * self.p_v[2] ** self.p_c[2] 
self.p_expr[3] = self.p_expr[0].doit() 
self.p_expr[0] = self.p_expr[3] - self.p_expr[3] 
self.p_expr[1] = Product(self.p_expr[0],(self.p_v[1],self.p_c[3],self.p_c[3])) 
self.p_expr[3] = powdenest(self.p_expr[1]) 
self.p_expr[0] = Product(self.p_expr[1],(self.p_v[0],self.p_c[3],self.p_c[2])) 
self.p_expr[2] = Sum(self.p_expr[3],(self.p_v[0],self.p_c[2],self.p_c[2])) 
self.p_expr[3] = self.p_expr[2] % self.p_expr[3] 
