self.p_v[2] = Symbol('y') 
self.p_v[0] = Symbol('e',positive=True) 
self.p_v[3] = Symbol('l',positive=True) 
self.p_c[3] = Integer(4) 
self.p_term[0] = self.p_c[3] * self.p_v[2] ** self.p_c[3] 
self.p_c[3] = Integer(5) 
self.p_v[2] = Symbol('k',positive=True) 
self.p_expr[1] = self.p_c[3] 
self.p_expr[3] = expand_power_base(self.p_expr[1]) 
self.p_expr[1] = self.p_expr[1].subs(self.p_expr[3],self.p_expr[1]) 
self.p_expr[3] = Sum(self.p_expr[3],(self.p_v[3],self.p_c[3],self.p_c[3])) 
self.p_expr[1] = powsimp(self.p_expr[1]) 
self.p_expr[3] = self.p_expr[1] % self.p_expr[3] 
