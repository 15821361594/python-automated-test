self.p_v[1] = Symbol('y') 
self.p_v[0] = Symbol('a') 
self.p_c[1] = Integer(9) 
self.p_c[3] = Integer(5) 
self.p_c[2] = Integer(2) 
self.p_expr[2] = Rational(self.p_c[3],self.p_c[3]) 
self.p_expr[0] = logcombine(self.p_expr[2]) 
self.p_expr[3] = Product(self.p_expr[2],(self.p_v[0],self.p_c[2],self.p_c[1])) 
self.p_expr[1] = Sum(self.p_expr[0],(self.p_v[1],self.p_c[1],self.p_c[2])) 
self.p_term[2] = self.p_c[1] * self.p_v[1] ** self.p_c[1] 
self.p_expr[2] = Product(self.p_expr[3],(self.p_v[0],self.p_c[2],self.p_c[3])) 
self.p_expr[3] = self.p_expr[3] + self.p_expr[0] 
self.p_expr[0] = Product(self.p_expr[0],(self.p_v[1],self.p_c[1],self.p_c[2])) 
self.p_expr[0] = self.p_expr[0].subs(self.p_expr[2],self.p_expr[0]) 
self.p_expr[0] = Sum(self.p_expr[0],(self.p_v[0],self.p_c[1],self.p_c[3])) 
self.p_expr[2] = apart(self.p_expr[1]) 
self.p_expr[1] = self.p_expr[3] % self.p_expr[2] 
