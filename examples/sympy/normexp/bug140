self.p_c[1] = Integer(4) 
self.p_v[1] = Symbol('x') 
self.p_v[0] = Symbol('b') 
self.p_v[3] = Symbol('i',positive=True) 
self.p_c[0] = Integer(10) 
self.p_expr[2] = I 
self.p_expr[0] = pi 
self.p_expr[3] = Sum(self.p_expr[0],(self.p_v[1],self.p_c[0],self.p_c[0])) 
self.p_expr[1] = factor(self.p_expr[2]) 
self.p_c[2] = Integer(2) 
self.p_expr[0] = self.p_expr[2].subs(self.p_expr[0],self.p_expr[3]) 
self.p_expr[0] = self.p_expr[2] % self.p_expr[0] 
self.p_expr[3] = self.p_expr[0] ** self.p_expr[3] 
self.p_expr[0] = expand_func(self.p_expr[0]) 
self.p_expr[3] = Product(self.p_expr[1],(self.p_v[3],self.p_c[0],self.p_c[0])) 
self.p_expr[0] = self.p_expr[3] ** self.p_expr[3] 
self.p_expr[1] = expand(self.p_expr[1]) 
self.p_expr[3] = Product(self.p_expr[1],(self.p_v[3],self.p_c[1],self.p_c[0])) 
self.p_expr[2] = self.p_c[0] 
self.p_expr[1] = Sum(self.p_expr[1],(self.p_v[1],self.p_c[2],self.p_c[2])) 
self.p_c[1] = Integer(5) 
self.p_expr[1] = self.p_expr[3] ** self.p_expr[2] 
self.p_expr[2] = self.p_expr[1] % self.p_expr[2] 
