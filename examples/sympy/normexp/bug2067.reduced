self.p_v[0] = Symbol('k',positive=True) 
self.p_c[3] = Integer(0) 
self.p_expr[3] = self.p_c[3] 
self.p_expr[2] = expand_power_exp(self.p_expr[3]) 
self.p_expr[0] = self.p_expr[2] + self.p_expr[3] 
self.p_v[1] = Symbol('d') 
self.p_c[0] = Integer(6) 
self.p_expr[1] = self.p_expr[0] / self.p_expr[0] 
self.p_expr[0] = Sum(self.p_expr[2],(self.p_v[0],self.p_c[0],self.p_c[0])) 
self.p_c[2] = Integer(3) 
self.p_expr[3] = self.p_expr[0].subs(self.p_expr[1],self.p_expr[3]) 
self.p_expr[0] = Sum(self.p_expr[2],(self.p_v[1],self.p_c[2],self.p_c[3])) 
self.p_expr[1] = self.p_expr[0] + self.p_expr[3] 
self.p_expr[3] = Sum(self.p_expr[1],(self.p_v[1],self.p_c[3],self.p_c[3])) 
self.p_expr[1] = self.p_expr[3] % self.p_expr[1] 
