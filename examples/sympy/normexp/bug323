self.p_v[0] = Symbol('c') 
self.p_c[0] = Integer(10) 
self.p_v[1] = Symbol('b') 
self.p_term[1] = self.p_c[0] * self.p_v[0] ** self.p_c[0] 
self.p_expr[3] = self.p_c[0] 
self.p_expr[2] = logcombine(self.p_expr[3]) 
self.p_v[0] = Symbol('c') 
self.p_expr[0] = expand_power_exp(self.p_expr[2]) 
self.p_expr[3] = Product(self.p_expr[0],(self.p_v[1],self.p_c[0],self.p_c[0])) 
self.p_expr[0] = powdenest(self.p_expr[2]) 
self.p_term[2] = self.p_c[0] * self.p_v[0] ** self.p_c[0] 
self.p_expr[2] = sqrt(self.p_expr[3]) 
self.p_poly[1] = self.p_term[1] 
self.p_expr[1] = cos(self.p_expr[3]) 
self.p_expr[3] = expand(self.p_expr[3],force=True) 
self.p_c[0] = Integer(6) 
self.p_expr[3] = self.p_expr[3] ** self.p_expr[0] 
self.p_expr[0] = self.p_expr[0] % self.p_expr[2] 
