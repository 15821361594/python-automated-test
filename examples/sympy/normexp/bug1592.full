self.p_c[2] = Integer(4) 
self.p_v[2] = Symbol('e',positive=True) 
self.p_v[0] = Symbol('f',positive=True) 
self.p_c[1] = Integer(8) 
self.p_expr[2] = pi 
self.p_expr[1] = self.p_expr[2] % self.p_expr[2] 
self.p_expr[3] = atan(self.p_expr[1]) 
self.p_expr[1] = self.p_expr[1].subs(self.p_expr[1],self.p_expr[3]) 
self.p_expr[1] = sqrt(self.p_expr[3]) 
self.p_expr[2] = Product(self.p_expr[3],(self.p_v[0],self.p_c[2],self.p_c[1])) 
self.p_expr[3] = self.p_expr[2] - self.p_expr[1] 
self.p_expr[2] = Product(self.p_expr[3],(self.p_v[2],self.p_c[2],self.p_c[2])) 
self.p_expr[3] = tan(self.p_expr[3]) 
self.p_c[3] = Integer(4) 
self.p_expr[0] = sin(self.p_expr[3]) 
self.p_expr[1] = self.p_expr[0] - self.p_expr[3] 
self.p_expr[3] = Sum(self.p_expr[0],(self.p_v[0],self.p_c[3],self.p_c[2])) 
self.p_expr[0] = self.p_expr[0].subs(self.p_expr[0],self.p_expr[0]) 
self.p_expr[0] = trigsimp(self.p_expr[0]) 
self.p_v[1] = Symbol('i',positive=True) 
self.p_expr[0] = Product(self.p_expr[3],(self.p_v[0],self.p_c[3],self.p_c[2])) 
self.p_expr[3] = Product(self.p_expr[1],(self.p_v[1],self.p_c[1],self.p_c[3])) 
self.p_expr[1] = self.p_expr[0] % self.p_expr[1] 
