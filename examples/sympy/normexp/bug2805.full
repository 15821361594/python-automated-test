self.p_v[0] = Symbol('z') 
self.p_c[2] = Integer(9) 
self.p_c[1] = Integer(9) 
self.p_v[1] = Symbol('k',positive=True) 
self.p_expr[2] = Rational(self.p_c[2],self.p_c[2]) 
self.p_term[0] = self.p_c[1] * self.p_v[1] ** self.p_c[2] 
self.p_expr[3] = apart(self.p_expr[2]) 
self.p_v[3] = Symbol('l',positive=True) 
self.p_expr[0] = expand_func(self.p_expr[2]) 
self.p_expr[1] = Rational(self.p_c[2],self.p_c[2]) 
self.p_expr[2] = expand(self.p_expr[3]) 
self.p_expr[3] = Sum(self.p_expr[1],(self.p_v[1],self.p_c[1],self.p_c[2])) 
self.p_expr[1] = self.p_expr[3] ** self.p_expr[1] 
self.p_c[0] = Integer(8) 
self.p_expr[3] = sin(self.p_expr[3]) 
self.p_c[1] = Integer(8) 
self.p_expr[1] = self.p_expr[0].subs(self.p_expr[0],self.p_expr[3]) 
self.p_expr[0] = Sum(self.p_expr[2],(self.p_v[3],self.p_c[1],self.p_c[2])) 
self.p_expr[3] = self.p_expr[3] % self.p_expr[0] 
