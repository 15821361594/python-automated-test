self.p_v[0] = Symbol('e',positive=True) 
self.p_c[1] = Integer(3) 
self.p_v[3] = Symbol('f',positive=True) 
self.p_expr[2] = pi 
self.p_expr[0] = Product(self.p_expr[2],(self.p_v[3],self.p_c[1],self.p_c[1])) 
self.p_expr[2] = apart(self.p_expr[2]) 
self.p_v[2] = Symbol('c') 
self.p_v[3] = Symbol('z') 
self.p_expr[3] = expand_power_base(self.p_expr[2]) 
self.p_v[1] = Symbol('h',positive=True) 
self.p_expr[2] = self.p_expr[3] * self.p_expr[3] 
self.p_expr[3] = Sum(self.p_expr[2],(self.p_v[3],self.p_c[1],self.p_c[1])) 
self.p_c[2] = Integer(3) 
self.p_expr[1] = self.p_expr[3] % self.p_expr[2] 
self.p_term[1] = self.p_c[1] * self.p_v[3] ** self.p_c[2] 
self.p_expr[2] = sin(self.p_expr[3]) 
self.p_expr[3] = collect(self.p_expr[1],self.p_expr[2]) 
self.p_c[0] = Integer(7) 
self.p_expr[2] = expand_power_exp(self.p_expr[2]) 
self.p_c[2] = Integer(9) 
self.p_expr[2] = self.p_expr[1] % self.p_expr[2] 
