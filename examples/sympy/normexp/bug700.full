self.p_c[0] = Integer(5) 
self.p_v[3] = Symbol('z') 
self.p_c[3] = Integer(10) 
self.p_expr[2] = self.p_c[0] 
self.p_expr[3] = self.p_expr[2] + self.p_expr[2] 
self.p_term[3] = self.p_c[0] * self.p_v[3] ** self.p_c[3] 
self.p_expr[1] = cancel(self.p_expr[3]) 
self.p_expr[2] = self.p_c[3] 
self.p_v[1] = Symbol('k',positive=True) 
self.p_expr[0] = Product(self.p_expr[1],(self.p_v[3],self.p_c[0],self.p_c[3])) 
self.p_expr[3] = Product(self.p_expr[0],(self.p_v[3],self.p_c[0],self.p_c[0])) 
self.p_expr[1] = self.p_expr[2].subs(self.p_expr[3],self.p_expr[3]) 
self.p_expr[2] = powdenest(self.p_expr[0]) 
self.p_expr[0] = self.p_expr[1] % self.p_expr[0] 
