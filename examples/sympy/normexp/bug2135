self.p_v[1] = Symbol('d') 
self.p_v[3] = Symbol('z') 
self.p_v[0] = Symbol('a') 
self.p_v[2] = Symbol('g',positive=True) 
self.p_expr[1] = E 
self.p_c[2] = Integer(9) 
self.p_expr[0] = self.p_expr[1] * self.p_expr[1] 
self.p_expr[3] = Sum(self.p_expr[1],(self.p_v[1],self.p_c[2],self.p_c[2])) 
self.p_v[1] = Symbol('c') 
self.p_expr[2] = expand(self.p_expr[3]) 
self.p_expr[3] = self.p_expr[3].doit() 
self.p_expr[3] = self.p_expr[0] % self.p_expr[3] 
self.p_term[1] = self.p_c[2] * self.p_v[1] ** self.p_c[2] 
self.p_expr[1] = self.p_expr[1] / self.p_expr[2] 
self.p_expr[3] = self.p_expr[2] + self.p_expr[0] 
self.p_expr[1] = Sum(self.p_expr[0],(self.p_v[2],self.p_c[2],self.p_c[2])) 
self.p_expr[2] = self.p_expr[1] + self.p_expr[3] 
self.p_c[2] = Integer(7) 
self.p_expr[1] = self.p_expr[1] / self.p_expr[2] 
self.p_expr[0] = self.p_expr[3] % self.p_expr[1] 
