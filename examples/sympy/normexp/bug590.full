self.p_c[0] = Integer(10) 
self.p_v[1] = Symbol('a') 
self.p_expr[2] = E 
self.p_expr[0] = cos(self.p_expr[2]) 
self.p_expr[1] = self.p_expr[2].subs(self.p_expr[0],self.p_expr[0]) 
self.p_expr[0] = self.p_expr[1].subs(self.p_expr[2],self.p_expr[1]) 
self.p_expr[1] = self.p_expr[2] ** self.p_expr[0] 
self.p_expr[0] = self.p_expr[2] * self.p_expr[1] 
self.p_expr[2] = self.p_expr[2] ** self.p_expr[1] 
self.p_expr[1] = self.p_expr[2] + self.p_expr[2] 
self.p_expr[2] = self.p_expr[2] ** self.p_expr[2] 
self.p_expr[3] = cancel(self.p_expr[2]) 
self.p_expr[2] = expand_log(self.p_expr[0]) 
self.p_v[3] = Symbol('a') 
self.p_expr[0] = self.p_expr[1].subs(self.p_expr[1],self.p_expr[2]) 
self.p_expr[2] = expand_func(self.p_expr[3]) 
self.p_expr[1] = self.p_expr[3] ** self.p_expr[0] 
self.p_expr[0] = self.p_expr[2].subs(self.p_expr[0],self.p_expr[2]) 
self.p_expr[2] = self.p_v[3] 
self.p_v[0] = Symbol('i',positive=True) 
self.p_expr[3] = apart(self.p_expr[3]) 
self.p_expr[0] = self.p_expr[0].subs(self.p_expr[1],self.p_expr[1]) 
self.p_expr[3] = self.p_expr[0] * self.p_expr[3] 
self.p_expr[1] = self.p_expr[2].subs(self.p_expr[3],self.p_expr[3]) 
self.p_expr[0] = self.p_expr[1].subs(self.p_expr[0],self.p_expr[2]) 
self.p_expr[3] = factor(self.p_expr[3]) 
self.p_expr[3] = Product(self.p_expr[3],(self.p_v[3],self.p_c[0],self.p_c[0])) 
self.p_expr[1] = self.p_expr[2] + self.p_expr[0] 
self.p_expr[0] = self.p_expr[3].subs(self.p_expr[1],self.p_expr[3]) 
self.p_expr[1] = self.p_expr[2].subs(self.p_expr[0],self.p_expr[1]) 
self.p_v[2] = Symbol('g',positive=True) 
self.p_expr[2] = self.p_expr[0] + self.p_expr[0] 
self.p_expr[1] = expand_power_base(self.p_expr[0]) 
self.p_expr[3] = collect(self.p_expr[1],self.p_expr[3]) 
self.p_expr[3] = self.p_expr[0] % self.p_expr[0] 
self.p_expr[1] = self.p_expr[1].subs(self.p_expr[3],self.p_expr[1]) 
self.p_expr[3] = atan(self.p_expr[0]) 
self.p_expr[0] = logcombine(self.p_expr[3]) 
self.p_expr[1] = self.p_expr[0] + self.p_expr[2] 
self.p_expr[0] = sqrt(self.p_expr[2]) 
self.p_expr[2] = self.p_expr[2] % self.p_expr[0] 
