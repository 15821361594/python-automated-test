self.p_v[2] = Symbol('e',positive=True) 
self.p_v[1] = Symbol('x') 
self.p_c[2] = Integer(0) 
self.p_expr[2] = self.p_c[2] 
self.p_expr[3] = asin(self.p_expr[2]) 
self.p_expr[2] = cancel(self.p_expr[2]) 
self.p_expr[0] = Sum(self.p_expr[2],(self.p_v[2],self.p_c[2],self.p_c[2])) 
self.p_v[2] = Symbol('y') 
self.p_expr[1] = simplify(self.p_expr[2]) 
self.p_expr[2] = Sum(self.p_expr[2],(self.p_v[2],self.p_c[2],self.p_c[2])) 
self.p_c[3] = Integer(0) 
self.p_expr[2] = collect(self.p_expr[3],self.p_expr[0]) 
self.p_expr[3] = self.p_expr[2] - self.p_expr[1] 
self.p_expr[2] = self.p_expr[1] % self.p_expr[1] 
self.p_expr[1] = collect(self.p_expr[3],self.p_expr[1]) 
self.p_expr[3] = self.p_expr[3].subs(self.p_expr[2],self.p_expr[1]) 
self.p_expr[2] = self.p_expr[3] % self.p_expr[1] 
self.p_expr[3] = Sum(self.p_expr[1],(self.p_v[2],self.p_c[2],self.p_c[2])) 
self.p_expr[2].evalf() 
self.p_expr[0] = self.p_expr[2] + self.p_expr[0] 
self.p_expr[1] = Product(self.p_expr[0],(self.p_v[1],self.p_c[2],self.p_c[3])) 
self.p_expr[0] = self.p_expr[1] % self.p_expr[3] 
