self.p_c[3] = Integer(0) 
self.p_expr[0] = E 
self.p_expr[1] = Rational(self.p_c[3],self.p_c[3]) 
self.p_expr[3] = simplify(self.p_expr[0]) 
self.p_expr[2] = collect(self.p_expr[1],self.p_expr[0]) 
self.p_c[3] = Integer(1) 
self.p_c[1] = Integer(10) 
self.p_expr[0] = self.p_expr[1] ** self.p_expr[1] 
self.p_expr[1] = self.p_expr[2] % self.p_expr[0] 
self.p_expr[2] = self.p_expr[1] - self.p_expr[1] 
self.p_expr[0] = self.p_expr[2].subs(self.p_expr[0],self.p_expr[2]) 
self.p_expr[1] = self.p_expr[3].subs(self.p_expr[1],self.p_expr[1]) 
self.p_expr[2] = cos(self.p_expr[1]) 
self.p_expr[0] = sqrt(self.p_expr[3]) 
self.p_c[2] = Integer(7) 
self.p_expr[1] = self.p_expr[3] - self.p_expr[0] 
self.p_v[2] = Symbol('l',positive=True) 
self.p_expr[3] = self.p_expr[2].subs(self.p_expr[0],self.p_expr[2]) 
self.p_expr[2] = self.p_expr[0] + self.p_expr[3] 
self.p_expr[3] = self.p_expr[0].subs(self.p_expr[0],self.p_expr[1]) 
self.p_expr[1] = combsimp(self.p_expr[1]) 
self.p_expr[1] = factor(self.p_expr[1]) 
self.p_expr[0] = expand_log(self.p_expr[1]) 
self.p_expr[1] = self.p_expr[2] + self.p_expr[3] 
self.p_expr[3] = collect(self.p_expr[3],self.p_expr[3]) 
self.p_expr[2] = powdenest(self.p_expr[0]) 
self.p_expr[0] = self.p_expr[1].subs(self.p_expr[1],self.p_expr[0]) 
self.p_expr[3] = self.p_expr[3] % self.p_expr[1] 
self.p_expr[3] = self.p_expr[1] / self.p_expr[1] 
self.p_expr[0] = powsimp(self.p_expr[2]) 
self.p_expr[2] = self.p_expr[0].subs(self.p_expr[0],self.p_expr[3]) 
self.p_expr[0] = logcombine(self.p_expr[1]) 
self.p_expr[1] = Product(self.p_expr[2],(self.p_v[2],self.p_c[2],self.p_c[2])) 
self.p_expr[1].evalf() 
self.p_expr[1] = self.p_expr[0].subs(self.p_expr[1],self.p_expr[1]) 
self.p_expr[0] = Sum(self.p_expr[1],(self.p_v[2],self.p_c[1],self.p_c[1])) 
self.p_expr[2] = self.p_expr[0] + self.p_expr[1] 
self.p_expr[0] = powdenest(self.p_expr[0]) 
self.p_expr[1] = Rational(self.p_c[2],self.p_c[3]) 
self.p_expr[3] = Sum(self.p_expr[3],(self.p_v[2],self.p_c[2],self.p_c[3])) 
self.p_expr[3] = sqrt(self.p_expr[2]) 
self.p_expr[2] = self.p_expr[2] % self.p_expr[0] 
