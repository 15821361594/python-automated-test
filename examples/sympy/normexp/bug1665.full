self.p_c[1] = Integer(9) 
self.p_v[2] = Symbol('x') 
self.p_c[3] = Integer(3) 
self.p_v[0] = Symbol('i',positive=True) 
self.p_v[3] = Symbol('z') 
self.p_expr[0] = Rational(self.p_c[1],self.p_c[1]) 
self.p_expr[2] = powdenest(self.p_expr[0]) 
self.p_c[0] = Integer(4) 
self.p_expr[0] = Product(self.p_expr[2],(self.p_v[3],self.p_c[0],self.p_c[0])) 
self.p_expr[1] = expand_power_exp(self.p_expr[2]) 
self.p_expr[2] = self.p_expr[1] ** self.p_expr[0] 
self.p_v[3] = Symbol('d') 
self.p_expr[1] = Sum(self.p_expr[2],(self.p_v[2],self.p_c[1],self.p_c[3])) 
self.p_expr[3] = self.p_expr[2] % self.p_expr[1] 
