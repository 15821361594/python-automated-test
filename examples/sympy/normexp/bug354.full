self.p_c[1] = Integer(0) 
self.p_v[0] = Symbol('e',positive=True) 
self.p_c[3] = Integer(6) 
self.p_c[0] = Integer(7) 
self.p_term[2] = self.p_c[0] * self.p_v[0] ** self.p_c[0] 
self.p_term[0] = self.p_c[0] * self.p_v[0] ** self.p_c[0] 
self.p_expr[3] = I 
self.p_expr[3].evalf() 
self.p_term[1] = self.p_c[1] * self.p_v[0] ** self.p_c[1] 
self.p_expr[1] = Product(self.p_expr[3],(self.p_v[0],self.p_c[3],self.p_c[3])) 
self.p_expr[2] = expand_trig(self.p_expr[3]) 
self.p_c[3] = Integer(0) 
self.p_c[2] = Integer(5) 
self.p_expr[0] = Sum(self.p_expr[1],(self.p_v[0],self.p_c[2],self.p_c[0])) 
self.p_expr[3] = expand_power_base(self.p_expr[3]) 
self.p_expr[1] = Sum(self.p_expr[3],(self.p_v[0],self.p_c[2],self.p_c[3])) 
self.p_expr[3] = Sum(self.p_expr[1],(self.p_v[0],self.p_c[1],self.p_c[0])) 
self.p_expr[1] = self.p_expr[2] % self.p_expr[0] 
