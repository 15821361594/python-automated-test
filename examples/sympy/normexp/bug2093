self.p_c[0] = Integer(4) 
self.p_v[2] = Symbol('a') 
self.p_expr[3] = pi 
self.p_expr[1] = self.p_expr[3] + self.p_expr[3] 
self.p_expr[3] = factorial(self.p_expr[1]) 
self.p_expr[3].evalf() 
self.p_expr[3] = atan(self.p_expr[1]) 
self.p_expr[0] = expand_log(self.p_expr[3]) 
self.p_expr[1] = factorial(self.p_expr[3]) 
self.p_c[1] = Integer(9) 
self.p_expr[3] = trigsimp(self.p_expr[3]) 
self.p_expr[3] = self.p_expr[1] + self.p_expr[3] 
self.p_expr[1] = self.p_expr[0] * self.p_expr[1] 
self.p_expr[3] = self.p_expr[1] + self.p_expr[0] 
self.p_expr[0] = factorial(self.p_expr[1]) 
self.p_expr[2] = self.p_expr[0].subs(self.p_expr[0],self.p_expr[0]) 
self.p_expr[0] = self.p_expr[1].subs(self.p_expr[0],self.p_expr[2]) 
self.p_expr[2] = Sum(self.p_expr[0],(self.p_v[2],self.p_c[1],self.p_c[0])) 
self.p_v[0] = Symbol('g',positive=True) 
self.p_expr[1] = atan(self.p_expr[2]) 
self.p_expr[0] = Product(self.p_expr[2],(self.p_v[0],self.p_c[0],self.p_c[0])) 
self.p_v[2] = Symbol('x') 
self.p_c[3] = Integer(8) 
self.p_expr[2] = Sum(self.p_expr[1],(self.p_v[0],self.p_c[1],self.p_c[3])) 
self.p_expr[1] = self.p_expr[3] % self.p_expr[0] 
