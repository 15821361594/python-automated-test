self.p_c[1] = Integer(8) 
self.p_c[2] = Integer(4) 
self.p_v[2] = Symbol('k',positive=True) 
self.p_expr[2] = I 
self.p_v[1] = Symbol('j',positive=True) 
self.p_expr[3] = expand_func(self.p_expr[2]) 
self.p_expr[2] = Product(self.p_expr[3],(self.p_v[1],self.p_c[1],self.p_c[2])) 
self.p_expr[3] = expand_trig(self.p_expr[3]) 
self.p_expr[0] = Product(self.p_expr[3],(self.p_v[2],self.p_c[2],self.p_c[2])) 
self.p_expr[1] = self.p_expr[2].subs(self.p_expr[2],self.p_expr[2]) 
self.p_expr[3] = Product(self.p_expr[0],(self.p_v[2],self.p_c[1],self.p_c[1])) 
self.p_expr[0] = collect(self.p_expr[0],self.p_expr[3]) 
self.p_expr[3] = self.p_expr[3] / self.p_expr[1] 
self.p_expr[3] = self.p_expr[0] % self.p_expr[2] 
