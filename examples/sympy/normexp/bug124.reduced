self.p_c[0] = Integer(4) 
self.p_c[3] = Integer(5) 
self.p_expr[2] = self.p_c[3] 
self.p_expr[1] = self.p_expr[2] - self.p_expr[2] 
self.p_expr[3] = expand(self.p_expr[2]) 
self.p_c[2] = Integer(1) 
self.p_v[1] = Symbol('h',positive=True) 
self.p_c[1] = Integer(10) 
self.p_expr[0] = Sum(self.p_expr[2],(self.p_v[1],self.p_c[2],self.p_c[3])) 
self.p_expr[2] = collect(self.p_expr[0],self.p_expr[3]) 
self.p_expr[3] = self.p_expr[1] * self.p_expr[1] 
self.p_v[0] = Symbol('c') 
self.p_expr[0] = Product(self.p_expr[3],(self.p_v[0],self.p_c[2],self.p_c[0])) 
self.p_expr[1] = self.p_expr[2].subs(self.p_expr[1],self.p_expr[3]) 
self.p_expr[2] = Sum(self.p_expr[0],(self.p_v[1],self.p_c[1],self.p_c[3])) 
self.p_expr[0] = self.p_expr[0].subs(self.p_expr[1],self.p_expr[2]) 
self.p_expr[2] = self.p_expr[0] % self.p_expr[2] 
