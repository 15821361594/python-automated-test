self.p_v[1] = Symbol('h',positive=True) 
self.p_c[1] = Integer(10) 
self.p_v[3] = Symbol('b') 
self.p_expr[1] = E 
self.p_v[0] = Symbol('g',positive=True) 
self.p_expr[2] = I 
self.p_expr[3] = E 
self.p_c[2] = Integer(2) 
self.p_expr[0] = Sum(self.p_expr[3],(self.p_v[0],self.p_c[2],self.p_c[2])) 
self.p_expr[3] = powsimp(self.p_expr[2]) 
self.p_expr[2] = self.p_expr[2].subs(self.p_expr[2],self.p_expr[0]) 
self.p_expr[2] = self.p_expr[1] + self.p_expr[3] 
self.p_expr[0] = Sum(self.p_expr[1],(self.p_v[0],self.p_c[2],self.p_c[2])) 
self.p_expr[1] = self.p_expr[3].subs(self.p_expr[2],self.p_expr[3]) 
self.p_expr[2] = Product(self.p_expr[3],(self.p_v[0],self.p_c[2],self.p_c[2])) 
self.p_expr[3] = self.p_expr[1].subs(self.p_expr[0],self.p_expr[2]) 
self.p_expr[0] = self.p_expr[1].subs(self.p_expr[0],self.p_expr[0]) 
self.p_expr[2] = Sum(self.p_expr[0],(self.p_v[3],self.p_c[2],self.p_c[2])) 
self.p_term[3] = self.p_c[2] * self.p_v[1] ** self.p_c[1] 
self.p_expr[0] = Product(self.p_expr[3],(self.p_v[0],self.p_c[2],self.p_c[1])) 
self.p_expr[1] = self.p_expr[2] % self.p_expr[0] 
