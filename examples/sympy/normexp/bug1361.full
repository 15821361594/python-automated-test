self.p_v[1] = Symbol('b') 
self.p_v[3] = Symbol('a') 
self.p_c[0] = Integer(5) 
self.p_c[1] = Integer(4) 
self.p_term[0] = self.p_c[0] * self.p_v[1] ** self.p_c[1] 
self.p_expr[2] = self.p_v[3] 
self.p_v[0] = Symbol('z') 
self.p_c[1] = Integer(7) 
self.p_expr[3] = sin(self.p_expr[2]) 
self.p_expr[1] = Product(self.p_expr[3],(self.p_v[0],self.p_c[1],self.p_c[0])) 
self.p_expr[3] = Product(self.p_expr[2],(self.p_v[1],self.p_c[1],self.p_c[1])) 
self.p_expr[0] = Sum(self.p_expr[1],(self.p_v[3],self.p_c[1],self.p_c[1])) 
self.p_expr[1] = Product(self.p_expr[2],(self.p_v[3],self.p_c[1],self.p_c[1])) 
self.p_expr[2] = Product(self.p_expr[1],(self.p_v[1],self.p_c[0],self.p_c[0])) 
self.p_expr[1] = self.p_expr[1].subs(self.p_expr[3],self.p_expr[2]) 
self.p_expr[2] = self.p_expr[0] * self.p_expr[1] 
self.p_expr[0] = self.p_expr[1].subs(self.p_expr[1],self.p_expr[1]) 
self.p_expr[1] = self.p_expr[2].doit() 
self.p_c[2] = Integer(1) 
self.p_expr[2] = Rational(self.p_c[2],self.p_c[0]) 
self.p_expr[3] = Product(self.p_expr[1],(self.p_v[3],self.p_c[0],self.p_c[1])) 
self.p_expr[1] = self.p_expr[1] % self.p_expr[3] 
