self.p_c[0] = Integer(6) 
self.p_c[3] = Integer(0) 
self.p_expr[1] = self.p_c[3] 
self.p_v[0] = Symbol('x') 
self.p_expr[3] = expand_trig(self.p_expr[1]) 
self.p_expr[0] = cos(self.p_expr[3]) 
self.p_c[1] = Integer(10) 
self.p_expr[1] = self.p_expr[3] / self.p_expr[3] 
self.p_expr[3] = powdenest(self.p_expr[1]) 
self.p_expr[2] = self.p_expr[0].subs(self.p_expr[1],self.p_expr[0]) 
self.p_v[3] = Symbol('j',positive=True) 
self.p_expr[0] = collect(self.p_expr[3],self.p_expr[2]) 
self.p_expr[2] = self.p_expr[0] ** self.p_expr[2] 
self.p_expr[3] = factorial(self.p_expr[2]) 
self.p_expr[2] = Product(self.p_expr[3],(self.p_v[3],self.p_c[0],self.p_c[1])) 
self.p_expr[1] = Sum(self.p_expr[2],(self.p_v[0],self.p_c[3],self.p_c[3])) 
self.p_expr[2] = self.p_expr[3] % self.p_expr[2] 
