self.p_c[3] = Integer(4) 
self.p_v[3] = Symbol('h',positive=True) 
self.p_v[1] = Symbol('h',positive=True) 
self.p_c[1] = Integer(1) 
self.p_v[0] = Symbol('a') 
self.p_expr[3] = self.p_c[1] 
self.p_expr[0] = Sum(self.p_expr[3],(self.p_v[3],self.p_c[1],self.p_c[1])) 
self.p_expr[1] = collect(self.p_expr[0],self.p_expr[3]) 
self.p_expr[2] = self.p_expr[0] ** self.p_expr[3] 
self.p_expr[0] = Sum(self.p_expr[3],(self.p_v[0],self.p_c[1],self.p_c[1])) 
self.p_expr[3] = Product(self.p_expr[3],(self.p_v[3],self.p_c[3],self.p_c[1])) 
self.p_expr[3] = self.p_expr[3].subs(self.p_expr[0],self.p_expr[1]) 
self.p_expr[1] = Sum(self.p_expr[0],(self.p_v[3],self.p_c[3],self.p_c[1])) 
self.p_expr[0] = self.p_expr[3].subs(self.p_expr[2],self.p_expr[1]) 
self.p_c[0] = Integer(2) 
self.p_expr[1] = self.p_expr[0].subs(self.p_expr[2],self.p_expr[3]) 
self.p_term[2] = self.p_c[3] * self.p_v[0] ** self.p_c[3] 
self.p_expr[0] = self.p_expr[0].subs(self.p_expr[3],self.p_expr[2]) 
self.p_expr[3] = factor(self.p_expr[0]) 
self.p_expr[2] = Sum(self.p_expr[3],(self.p_v[3],self.p_c[0],self.p_c[1])) 
self.p_expr[3] = self.p_expr[0] % self.p_expr[1] 
