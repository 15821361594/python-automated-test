self.p_v[2] = Symbol('g',positive=True) 
self.p_c[3] = Integer(5) 
self.p_v[0] = Symbol('z') 
self.p_c[1] = Integer(6) 
self.p_term[0] = self.p_c[3] * self.p_v[2] ** self.p_c[1] 
self.p_v[2] = Symbol('x') 
self.p_c[3] = Integer(2) 
self.p_c[2] = Integer(7) 
self.p_expr[3] = Rational(self.p_c[3],self.p_c[3]) 
self.p_expr[1] = expand_power_base(self.p_expr[3]) 
self.p_expr[2] = Product(self.p_expr[1],(self.p_v[2],self.p_c[1],self.p_c[1])) 
self.p_expr[1] = Product(self.p_expr[2],(self.p_v[2],self.p_c[2],self.p_c[1])) 
self.p_expr[3] = apart(self.p_expr[3]) 
self.p_expr[0] = self.p_expr[3] % self.p_expr[2] 
