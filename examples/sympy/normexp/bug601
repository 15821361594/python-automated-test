self.p_v[2] = Symbol('c') 
self.p_c[0] = Integer(10) 
self.p_c[1] = Integer(1) 
self.p_c[2] = Integer(1) 
self.p_expr[0] = self.p_c[1] 
self.p_expr[2] = Rational(self.p_c[0],self.p_c[2]) 
self.p_expr[3] = self.p_expr[2] + self.p_expr[0] 
self.p_expr[1] = Rational(self.p_c[0],self.p_c[2]) 
self.p_expr[0] = self.p_expr[2] % self.p_expr[3] 
self.p_expr[3] = self.p_expr[1].subs(self.p_expr[0],self.p_expr[0]) 
self.p_expr[1] = self.p_expr[1] * self.p_expr[0] 
self.p_expr[1] = self.p_expr[2].doit() 
self.p_expr[0] = expand_power_base(self.p_expr[0]) 
self.p_expr[0] = self.p_expr[2] ** self.p_expr[0] 
self.p_expr[0] = factor(self.p_expr[1]) 
self.p_expr[1] = self.p_expr[3] ** self.p_expr[2] 
self.p_expr[2] = Sum(self.p_expr[3],(self.p_v[2],self.p_c[0],self.p_c[1])) 
self.p_expr[3] = apart(self.p_expr[3]) 
self.p_expr[3] = self.p_expr[0] % self.p_expr[2] 
