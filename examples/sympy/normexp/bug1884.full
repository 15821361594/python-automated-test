self.p_c[3] = Integer(10) 
self.p_v[2] = Symbol('e',positive=True) 
self.p_v[1] = Symbol('k',positive=True) 
self.p_v[3] = Symbol('z') 
self.p_expr[1] = I 
self.p_expr[0] = Product(self.p_expr[1],(self.p_v[1],self.p_c[3],self.p_c[3])) 
self.p_expr[1] = Rational(self.p_c[3],self.p_c[3]) 
self.p_c[1] = Integer(6) 
self.p_expr[2] = Product(self.p_expr[1],(self.p_v[2],self.p_c[1],self.p_c[3])) 
self.p_expr[1] = simplify(self.p_expr[2]) 
self.p_v[0] = Symbol('z') 
self.p_term[0] = self.p_c[1] * self.p_v[1] ** self.p_c[1] 
self.p_expr[3] = self.p_expr[2] + self.p_expr[0] 
self.p_expr[2] = self.p_expr[2] / self.p_expr[3] 
self.p_expr[3] = Sum(self.p_expr[1],(self.p_v[2],self.p_c[3],self.p_c[3])) 
self.p_expr[2] = expand(self.p_expr[1]) 
self.p_expr[1] = cancel(self.p_expr[1]) 
self.p_expr[1] = Product(self.p_expr[0],(self.p_v[0],self.p_c[1],self.p_c[3])) 
self.p_expr[0] = self.p_expr[1] - self.p_expr[3] 
self.p_expr[1] = collect(self.p_expr[1],self.p_expr[1]) 
self.p_expr[3] = self.p_expr[2] % self.p_expr[3] 
