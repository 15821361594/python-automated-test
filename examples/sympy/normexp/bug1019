self.p_expr[0] = E 
self.p_v[1] = Symbol('l',positive=True) 
self.p_expr[1] = factorial(self.p_expr[0]) 
self.p_expr[0] = combsimp(self.p_expr[1]) 
self.p_expr[2] = cancel(self.p_expr[0]) 
self.p_expr[3] = self.p_expr[1] % self.p_expr[0] 
self.p_expr[1] = logcombine(self.p_expr[0]) 
self.p_expr[0] = self.p_expr[2] ** self.p_expr[1] 
self.p_expr[1] = powdenest(self.p_expr[2]) 
self.p_expr[2] = self.p_expr[1].subs(self.p_expr[3],self.p_expr[3]) 
self.p_expr[3] = factorial(self.p_expr[0]) 
self.p_expr[0] = pi 
self.p_expr[1] = combsimp(self.p_expr[3]) 
self.p_v[0] = Symbol('z') 
self.p_c[1] = Integer(1) 
self.p_c[3] = Integer(4) 
self.p_expr[3] = Product(self.p_expr[3],(self.p_v[0],self.p_c[3],self.p_c[1])) 
self.p_expr[3] = self.p_expr[0] * self.p_expr[3] 
self.p_expr[3] = Product(self.p_expr[2],(self.p_v[1],self.p_c[3],self.p_c[3])) 
self.p_expr[0] = tan(self.p_expr[3]) 
self.p_expr[3] = self.p_expr[0] ** self.p_expr[1] 
self.p_expr[0] = self.p_expr[1] * self.p_expr[3] 
self.p_expr[2] = self.p_expr[2] % self.p_expr[1] 
