self.p_v[3] = Symbol('k',positive=True) 
self.p_c[3] = Integer(3) 
self.p_c[1] = Integer(4) 
self.p_v[1] = Symbol('c') 
self.p_c[0] = Integer(4) 
self.p_expr[0] = I 
self.p_expr[3] = Rational(self.p_c[0],self.p_c[0]) 
self.p_expr[2] = Product(self.p_expr[0],(self.p_v[1],self.p_c[1],self.p_c[3])) 
self.p_c[3] = Integer(6) 
self.p_expr[1] = cancel(self.p_expr[3]) 
self.p_expr[3] = self.p_expr[2].subs(self.p_expr[3],self.p_expr[0]) 
self.p_term[1] = self.p_c[0] * self.p_v[3] ** self.p_c[1] 
self.p_expr[0] = sin(self.p_expr[3]) 
self.p_expr[3] = Rational(self.p_c[3],self.p_c[0]) 
self.p_expr[2] = Product(self.p_expr[3],(self.p_v[1],self.p_c[3],self.p_c[3])) 
self.p_expr[3] = acos(self.p_expr[1]) 
self.p_expr[1] = Sum(self.p_expr[3],(self.p_v[1],self.p_c[1],self.p_c[1])) 
self.p_expr[3] = expand_trig(self.p_expr[1]) 
self.p_expr[1] = self.p_expr[1] - self.p_expr[3] 
self.p_expr[1] = cos(self.p_expr[0]) 
self.p_expr[3] = asin(self.p_expr[2]) 
self.p_c[1] = Integer(7) 
self.p_expr[2] = self.p_expr[0] % self.p_expr[2] 
