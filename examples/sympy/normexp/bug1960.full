self.p_v[1] = Symbol('y') 
self.p_v[2] = Symbol('g',positive=True) 
self.p_c[2] = Integer(10) 
self.p_v[3] = Symbol('b') 
self.p_expr[0] = pi 
self.p_expr[3] = expand(self.p_expr[0]) 
self.p_expr[0] = Product(self.p_expr[3],(self.p_v[2],self.p_c[2],self.p_c[2])) 
self.p_expr[1] = sin(self.p_expr[3]) 
self.p_expr[3] = self.p_expr[3].subs(self.p_expr[1],self.p_expr[1]) 
self.p_c[2] = Integer(6) 
self.p_expr[2] = self.p_expr[3].subs(self.p_expr[0],self.p_expr[3]) 
self.p_expr[0] = trigsimp(self.p_expr[0]) 
self.p_expr[1] = self.p_expr[2] - self.p_expr[2] 
self.p_expr[2] = Product(self.p_expr[1],(self.p_v[2],self.p_c[2],self.p_c[2])) 
self.p_expr[1] = self.p_expr[1] / self.p_expr[0] 
self.p_expr[1] = self.p_expr[0] % self.p_expr[3] 
self.p_c[2] = Integer(2) 
self.p_expr[0] = expand_func(self.p_expr[3]) 
self.p_v[2] = Symbol('j',positive=True) 
self.p_expr[3] = expand_power_base(self.p_expr[0]) 
self.p_expr[0] = self.p_expr[0] + self.p_expr[3] 
self.p_expr[0] = self.p_expr[2] % self.p_expr[1] 
