self.p_c[3] = Integer(7) 
self.p_v[3] = Symbol('c') 
self.p_c[2] = Integer(3) 
self.p_c[1] = Integer(10) 
self.p_expr[1] = Rational(self.p_c[1],self.p_c[2]) 
self.p_expr[0] = self.p_expr[1] ** self.p_expr[1] 
self.p_c[2] = Integer(3) 
self.p_term[3] = self.p_c[1] * self.p_v[3] ** self.p_c[3] 
self.p_expr[2] = Product(self.p_expr[1],(self.p_v[3],self.p_c[3],self.p_c[3])) 
self.p_expr[1] = self.p_expr[0] / self.p_expr[0] 
self.p_expr[0] = factorial(self.p_expr[0]) 
self.p_expr[0] = sin(self.p_expr[0]) 
self.p_expr[0] = self.p_expr[1] * self.p_expr[1] 
self.p_expr[3] = Sum(self.p_expr[0],(self.p_v[3],self.p_c[2],self.p_c[1])) 
self.p_expr[0] = self.p_expr[3] % self.p_expr[2] 
self.p_expr[3] = self.p_expr[0].subs(self.p_expr[0],self.p_expr[1]) 
self.p_c[2] = Integer(3) 
self.p_expr[2] = self.p_expr[2].subs(self.p_expr[2],self.p_expr[1]) 
self.p_expr[1] = self.p_expr[0] * self.p_expr[0] 
self.p_expr[0] = powdenest(self.p_expr[1]) 
self.p_expr[1] = apart(self.p_expr[0]) 
self.p_term[1] = self.p_c[2] * self.p_v[3] ** self.p_c[2] 
self.p_expr[0] = expand_log(self.p_expr[2]) 
self.p_expr[2] = Sum(self.p_expr[2],(self.p_v[3],self.p_c[3],self.p_c[3])) 
self.p_c[3] = Integer(9) 
self.p_expr[2] = self.p_expr[3] % self.p_expr[2] 
