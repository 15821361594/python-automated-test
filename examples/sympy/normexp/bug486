self.p_c[1] = Integer(1) 
self.p_c[3] = Integer(6) 
self.p_c[0] = Integer(4) 
self.p_expr[2] = Rational(self.p_c[1],self.p_c[0]) 
self.p_expr[1] = cos(self.p_expr[2]) 
self.p_expr[0] = self.p_expr[1].subs(self.p_expr[2],self.p_expr[1]) 
self.p_expr[3] = atan(self.p_expr[0]) 
self.p_expr[1] = factor(self.p_expr[0]) 
self.p_expr[2] = apart(self.p_expr[2]) 
self.p_expr[2] = self.p_expr[0] ** self.p_expr[3] 
self.p_expr[3] = self.p_expr[1] % self.p_expr[0] 
self.p_expr[0] = self.p_expr[3].subs(self.p_expr[1],self.p_expr[1]) 
self.p_expr[1] = E 
self.p_expr[3] = self.p_expr[0] * self.p_expr[1] 
self.p_expr[0] = self.p_expr[2] ** self.p_expr[2] 
self.p_expr[2] = tan(self.p_expr[0]) 
self.p_expr[0] = powdenest(self.p_expr[0]) 
self.p_expr[1] = self.p_expr[1].doit() 
self.p_v[2] = Symbol('h',positive=True) 
self.p_v[3] = Symbol('g',positive=True) 
self.p_expr[1] = Product(self.p_expr[0],(self.p_v[2],self.p_c[3],self.p_c[3])) 
self.p_term[1] = self.p_c[3] * self.p_v[3] ** self.p_c[3] 
self.p_expr[0] = self.p_expr[1] % self.p_expr[2] 
