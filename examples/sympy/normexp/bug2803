self.p_c[2] = Integer(3) 
self.p_expr[1] = Rational(self.p_c[2],self.p_c[2]) 
self.p_c[0] = Integer(7) 
self.p_expr[0] = self.p_c[0] 
self.p_expr[2] = simplify(self.p_expr[0]) 
self.p_expr[0] = combsimp(self.p_expr[2]) 
self.p_expr[3] = self.p_expr[0] - self.p_expr[0] 
self.p_expr[2] = self.p_expr[3] - self.p_expr[3] 
self.p_expr[0] = self.p_expr[3] + self.p_expr[0] 
self.p_expr[0] = self.p_expr[3] % self.p_expr[0] 
self.p_c[2] = Integer(4) 
self.p_expr[3] = self.p_expr[2].doit() 
self.p_expr[0] = self.p_expr[2].subs(self.p_expr[2],self.p_expr[1]) 
self.p_expr[2] = self.p_expr[1] + self.p_expr[2] 
self.p_expr[2] = pi 
self.p_expr[1] = self.p_expr[0] % self.p_expr[0] 
self.p_v[2] = Symbol('i',positive=True) 
self.p_expr[0] = logcombine(self.p_expr[2]) 
self.p_expr[2] = factor(self.p_expr[3]) 
self.p_v[1] = Symbol('b') 
self.p_expr[3] = self.p_expr[0] - self.p_expr[0] 
self.p_c[0] = Integer(9) 
self.p_expr[0] = self.p_expr[1] - self.p_expr[3] 
self.p_expr[1] = Product(self.p_expr[3],(self.p_v[1],self.p_c[0],self.p_c[0])) 
self.p_expr[3] = sin(self.p_expr[1]) 
self.p_expr[1] = self.p_expr[0] % self.p_expr[2] 
self.p_expr[0] = self.p_expr[3].subs(self.p_expr[2],self.p_expr[2]) 
self.p_expr[3] = self.p_expr[0] % self.p_expr[1] 
