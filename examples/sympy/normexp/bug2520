self.p_v[3] = Symbol('f',positive=True) 
self.p_c[3] = Integer(8) 
self.p_c[0] = Integer(8) 
self.p_v[0] = Symbol('j',positive=True) 
self.p_term[1] = self.p_c[0] * self.p_v[0] ** self.p_c[0] 
self.p_expr[0] = E 
self.p_v[0] = Symbol('i',positive=True) 
self.p_v[2] = Symbol('i',positive=True) 
self.p_expr[2] = expand(self.p_expr[0],force=True) 
self.p_expr[0] = expand(self.p_expr[0]) 
self.p_expr[3] = simplify(self.p_expr[2]) 
self.p_expr[2] = self.p_expr[2].subs(self.p_expr[2],self.p_expr[0]) 
self.p_expr[0] = self.p_expr[2].subs(self.p_expr[3],self.p_expr[0]) 
self.p_expr[0] = self.p_expr[3] ** self.p_expr[0] 
self.p_expr[3] = Product(self.p_expr[0],(self.p_v[3],self.p_c[0],self.p_c[0])) 
self.p_expr[2] = expand_func(self.p_expr[2]) 
self.p_expr[2] = self.p_expr[3].subs(self.p_expr[2],self.p_expr[0]) 
