self.p_v[0] = Symbol('h',positive=True) 
self.p_c[0] = Integer(4) 
self.p_v[3] = Symbol('g',positive=True) 
self.p_expr[0] = self.p_v[3] 
self.p_expr[2] = self.p_expr[0] % self.p_expr[0] 
self.p_expr[3] = self.p_expr[2] % self.p_expr[0] 
self.p_expr[1] = self.p_expr[3] + self.p_expr[2] 
self.p_expr[0] = self.p_expr[1] / self.p_expr[2] 
self.p_expr[1] = self.p_expr[0].subs(self.p_expr[0],self.p_expr[3]) 
self.p_expr[2] = self.p_expr[2] / self.p_expr[3] 
self.p_expr[3] = self.p_expr[1] - self.p_expr[2] 
self.p_expr[0] = self.p_expr[3].subs(self.p_expr[2],self.p_expr[0]) 
self.p_c[3] = Integer(3) 
self.p_expr[0] = factorial(self.p_expr[0]) 
self.p_v[1] = Symbol('c') 
self.p_expr[0] = self.p_expr[0] / self.p_expr[0] 
self.p_expr[3] = Rational(self.p_c[0],self.p_c[0]) 
self.p_expr[0] = Product(self.p_expr[0],(self.p_v[3],self.p_c[3],self.p_c[0])) 
self.p_expr[1] = self.p_expr[1] % self.p_expr[3] 
self.p_expr[2] = self.p_expr[1].subs(self.p_expr[0],self.p_expr[2]) 
self.p_expr[1] = Product(self.p_expr[1],(self.p_v[3],self.p_c[0],self.p_c[3])) 
self.p_expr[3] = self.p_expr[1] % self.p_expr[0] 
