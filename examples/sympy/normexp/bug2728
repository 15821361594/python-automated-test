self.p_v[0] = Symbol('l',positive=True) 
self.p_c[2] = Integer(9) 
self.p_v[1] = Symbol('d') 
self.p_c[1] = Integer(5) 
self.p_term[2] = self.p_c[1] * self.p_v[1] ** self.p_c[2] 
self.p_c[1] = Integer(4) 
self.p_expr[2] = Rational(self.p_c[1],self.p_c[2]) 
self.p_expr[1] = Product(self.p_expr[2],(self.p_v[1],self.p_c[2],self.p_c[2])) 
self.p_expr[2] = cancel(self.p_expr[2]) 
self.p_expr[0] = asin(self.p_expr[1]) 
self.p_expr[1] = collect(self.p_expr[2],self.p_expr[2]) 
self.p_expr[2] = powsimp(self.p_expr[2]) 
self.p_expr[3] = Product(self.p_expr[2],(self.p_v[1],self.p_c[2],self.p_c[2])) 
self.p_expr[2] = collect(self.p_expr[3],self.p_expr[2]) 
self.p_expr[3] = self.p_expr[0] - self.p_expr[3] 
self.p_expr[0] = self.p_expr[1] % self.p_expr[0] 
