self.p_expr[1] = I 
self.p_expr[3] = trigsimp(self.p_expr[1]) 
self.p_expr[2] = apart(self.p_expr[3]) 
self.p_expr[0] = self.p_expr[3].subs(self.p_expr[2],self.p_expr[3]) 
self.p_expr[2] = self.p_expr[0] * self.p_expr[3] 
self.p_expr[0] = factor(self.p_expr[2]) 
self.p_expr[2] = self.p_expr[1] - self.p_expr[0] 
self.p_expr[1] = acos(self.p_expr[0]) 
self.p_expr[0] = self.p_expr[0].subs(self.p_expr[0],self.p_expr[3]) 
self.p_expr[3] = self.p_expr[0] / self.p_expr[2] 
self.p_expr[0] = self.p_expr[0].subs(self.p_expr[1],self.p_expr[2]) 
self.p_expr[1] = factor(self.p_expr[3]) 
self.p_expr[3] = self.p_expr[0] / self.p_expr[1] 
self.p_expr[0] = sin(self.p_expr[1]) 
self.p_expr[1] = self.p_expr[1] + self.p_expr[0] 
self.p_expr[2] = self.p_expr[3].subs(self.p_expr[3],self.p_expr[1]) 
self.p_expr[0] = self.p_expr[2].subs(self.p_expr[0],self.p_expr[3]) 
self.p_expr[3] = self.p_expr[0] % self.p_expr[3] 
