@import redis

source: /Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/redis

pool: <r> 5

pool: <string> 5
pool: <int> 5
pool: <list> 5
pool: <set> 5

pool: <key> 5
pool: <val> 5

pool: <dump> 5

<string> := ""
<string> += <['a'..'z']>

<int> := <[0..9]>
<int> *= 10
<int> += <int>

<list> := []
<list>.append(<val>)

<set> := set([])
<set>.add(<string>)
<set>.add(<int>)

<key> := <string>

<val> := <string>
<val> := <int>
<val> := <list>
<val> := <set>

<r> := redis.StrictRedis(host='localhost', port=6379, db=0)

<r>.set(<key>,<val>)
<r>.get(<key>)
<r>.delete(<key>)
<dump> := <r>.dump(<key>)
<r>.exists(<key>)
<r>.expire(<key>,<int>)
<r>.keys()
<r>.persist(<key>)
<r>.pexpire(<key>,<int>)
<r>.pttl(<key>)
<key> := <r>.randomkey()
{redis.exceptions.ResponseError} <r>.rename(<key>,<key>)
{redis.exceptions.ResponseError} <r>.renamenx(<key>,<key>)
{redis.exceptions.ResponseError} <r>.restore(<key>,<int>,<dump>)
{redis.exceptions.ResponseError} <r>.sort(<key>)
#<r>.touch(<key>)
<r>.ttl(<key>)
<r>.type(<key>)
#<r>.unlink(<key>)
(<int,2> > 0) and (<int,2> < 3) -> <r>.wait(<int>,<int>)

{redis.exceptions.ResponseError} (<int,1> > 0) and (<int,1> < 3) -> <r>.blpop(<key>,<int>)
{redis.exceptions.ResponseError} (<int,1> > 0) and (<int,1> < 3) -> <r>.brpop(<key>,<int>)
{redis.exceptions.ResponseError} (<int,1> > 0) and (<int,1> < 3) -> <r>.brpoplpush(<key>,<key>,<int>)
{redis.exceptions.ResponseError} <val> := <r>.lindex(<key>,<int>)
#{redis.exceptions.ResponseError} <val> := <r>.linsert(<key>,<int>) FOR LATER
{redis.exceptions.ResponseError} <r>.llen(<key>)
{redis.exceptions.ResponseError} <r>.lpop(<key>)
{redis.exceptions.ResponseError} <r>.lpush(<key>,<val>)
{redis.exceptions.ResponseError} <r>.lpushx(<key>,<val>)
{redis.exceptions.ResponseError} <list> := <r>.lrange(<key>,<int>,<int>)
{redis.exceptions.ResponseError} <r>.lrem(<key>,<int>,<val>)
{redis.exceptions.ResponseError} <r>.lset(<key>,<int>,<val>)
{redis.exceptions.ResponseError} <r>.ltrim(<key>,<int>,<int>)
{redis.exceptions.ResponseError} <r>.rpop(<key>)
{redis.exceptions.ResponseError} <r>.rpoplpush(<key>,<key>)
{redis.exceptions.ResponseError} <r>.rpush(<key>,<val>)
{redis.exceptions.ResponseError} <r>.rpushx(<key>,<val>)



